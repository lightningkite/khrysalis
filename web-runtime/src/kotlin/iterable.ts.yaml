---


- id: kotlin.collections.Iterable
  type: call
  template: Iterable<~T0~>

# Extensions

- id: kotlin.collections.count
  type: call
  template:
    pattern: execPipe(~this~, filter(~0~), size)
    imports:
      size: iter-tools-es
      filter: iter-tools-es
      execPipe: iter-tools-es

- id: kotlin.collections.reversed
  type: call
  template:
    pattern: toArray(~this~).reverse()
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.drop
  type: call
  template:
    pattern: drop(~0~, ~this~)
    imports:
      drop: iter-tools-es

- id: kotlin.collections.dropLast
  type: call
  template:
    pattern: toArray(~this~).slice(0, -~0~)
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.dropWhile
  type: call
  template:
    pattern: dropWhile(~0~, ~this~)
    imports:
      dropWhile: iter-tools-es

#- id: kotlin.collections.dropLastWhile

- id: kotlin.collections.take
  type: call
  template:
    pattern: take(~0~, ~this~)
    imports:
      take: iter-tools-es

- id: kotlin.collections.takeLast
  type: call
  template:
    pattern: toArray(~this~).slice(-~0~)
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.takeWhile
  type: call
  template:
    pattern: takeWhile(~0~, ~this~)
    imports:
      takeWhile: iter-tools-es
#- id: kotlin.collections.takeLastWhile

- id: kotlin.collections.filter
  type: call
  template:
    pattern: filter(~0~, ~this~)
    imports:
      filter: iter-tools-es

- id: kotlin.collections.map
  type: call
  template:
    pattern: map(~0~, ~this~)
    imports:
      map: iter-tools-es

- id: kotlin.collections.mapIndexed
  type: call
  template:
    pattern: map(~0~, ~this~)
    imports:
      map: iter-tools-es

- id: kotlin.collections.flatMap
  type: call
  template:
    pattern: flatMap(~0~, ~this~)
    imports:
      flatMap: iter-tools-es

- id: kotlin.collections.filterIndexed
  type: call
  template:
    pattern: filter(~0~, ~this~)
    imports:
      filter: iter-tools-es

- id: kotlin.collections.filterNot
  type: call
  template:
    pattern: filter((x)=>{ !~0~(x) ), ~this~)
    imports:
      filter: iter-tools-es

- id: kotlin.collections.filterNotNull
  type: call
  template:
    pattern: filter(notNull, ~this~)
    imports:
      filter: iter-tools-es
      notNull: iter-tools-es
      map: iter-tools-es

- id: kotlin.collections.mapNotNull
  type: call
  template:
    pattern: execPipe(~this~, map(~0~), filter(notNull))
    imports:
      filter: iter-tools-es
      notNull: iter-tools-es
      map: iter-tools-es
      execPipe: iter-tools-es

- id: kotlin.collections.mapIndexedNotNull
  type: call
  template:
    pattern: execPipe(~this~, map(~0~), filter(notNull))
    imports:
      filter: iter-tools-es
      notNull: iter-tools-es
      map: iter-tools-es
      execPipe: iter-tools-es

- id: kotlin.collections.chunked
  type: call
  template:
    pattern: batch(~0~, ~this~)
    imports:
      batch: iter-tools-es

- id: kotlin.collections.sorted
  type: call
  template:
    pattern: toArray(~this~).sort()
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.sortedBy
  type: call
  template:
    pattern: toArray(~this~).sort((a, b) => safeCompare(~0~(a), ~0~(b)))
    imports:
      toArray: iter-tools-es
      safeCompare: @lightningkite/khrysalis-runtime

- id: kotlin.collections.sortedByDescending
  type: call
  template:
    pattern: toArray(~this~).sort((a, b) => -safeCompare(~0~(a), ~0~(b)))
    imports:
      toArray: iter-tools-es
      safeCompare: @lightningkite/khrysalis-runtime

- id: kotlin.collections.sortedWith
  type: call
  template:
    pattern: toArray(~this~).sort(~0~)
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.associate
  type: call
  template:
    pattern: new Map(map(~0~, ~this~))
    imports:
      map: iter-tools-es

- id: kotlin.collections.associateBy
  type: call
  template:
    pattern: new Map(x => [~0~(x), x])
    imports:
      map: iter-tools-es

- id: kotlin.collections.toList
  type: call
  template:
    pattern: toArray(~this~)
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.toMutableList
  type: call
  template:
    pattern: toArray(~this~)
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.toArrayList
  type: call
  template:
    pattern: toArray(~this~)
    imports:
      toArray: iter-tools-es

- id: kotlin.collections.distinct
  type: call
  template:
    pattern: "[...new EqualOverrideSet(~this~)]"
    imports:
      EqualOverrideSet: khrysalis-web

- id: kotlin.collections.toSet
  type: call
  template:
    pattern: "new EqualOverrideSet(~this~)"
    imports:
      EqualOverrideSet: khrysalis-web

- id: kotlin.collections.toMutableSet
  type: call
  template:
    pattern: "new EqualOverrideSet(~this~)"
    imports:
      EqualOverrideSet: khrysalis-web

- id: kotlin.collections.toHashSet
  type: call
  template:
    pattern: "new EqualOverrideSet(~this~)"
    imports:
      EqualOverrideSet: khrysalis-web

- id: kotlin.collections.distinct
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

- id: kotlin.collections.toSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

- id: kotlin.collections.toMutableSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

- id: kotlin.collections.toHashSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template:
    pattern: new Set(~this~)

# TODO: groupBy

- id: kotlin.collections.groupBy
  type: call
  template:
    pattern: new EqualOverrideMap(splitGroups(~0~, ~this~))
    imports:
      EqualOverrideMap: khrysalis-web
      splitGroups: iter-tools-es

- id: kotlin.collections.groupBy
  type: call
  typeArgumentRequirements:
    1: primitive
  template:
    pattern: new EqualOverrideMap(splitGroups(~0~, ~this~))
    imports:
      EqualOverrideMap: khrysalis-web
      splitGroups: iter-tools-es

- id: kotlin.collections.find
  type: call
  template:
    pattern: findOr(null, ~0~, ~this~)
    imports:
      findOr: iter-tools-es

- id: kotlin.collections.any
  type: call
  template:
    pattern: some(~0~, ~this~)
    imports:
      some: iter-tools-es

- id: kotlin.collections.all
  type: call
  template:
    pattern: every(~0~, ~this~)
    imports:
      every: iter-tools-es

- id: kotlin.collections.none
  type: call
  template:
    pattern: (!every(~0~, ~this~))
    imports:
      every: iter-tools-es

- id: kotlin.collections.plus
  type: call
  arguments: [ kotlin.collections.Iterable ]
  template:
    pattern: concat(~this~, ~0~)
    imports:
      concat: iter-tools-es

- id: kotlin.collections.plus
  type: call
  template:
    pattern: concat(~this~, [~0~])
    imports:
      concat: iter-tools-es

- id: kotlin.collections.forEach
  type: call
  template:
    pattern: for(const _x of ~this~) { ~L0~ }
    lambdaTransforms:
      0: ["_x"]

- id: kotlin.collections.first
  type: call
  arguments: []
  template:
    pattern: first(~this~)!
    imports:
      first: iter-tools-es

- id: kotlin.collections.firstOrNull
  type: call
  arguments: []
  template:
    pattern: firstOr(null, ~this~)!
    imports:
      firstOr: iter-tools-es

- id: kotlin.collections.last
  type: call
  arguments: []
  template:
    pattern: takeLast(~this~)!
    imports:
      takeLast: iter-tools-es

- id: kotlin.collections.lastOrNull
  type: call
  arguments: []
  template:
    pattern: takeLastOr(null, ~this~)!
    imports:
      takeLastOr: iter-tools-es

- id: kotlin.collections.firstOrNull
  type: call
  template:
    pattern: findOr(null, ~0~, ~this~)
    imports:
      findOr: iter-tools-es

# TODO
#- id: kotlin.collections.lastOrNull
#  type: call
#  template:
#    pattern: toArray(~this~).findLast(~0~)
#    imports:
#      toArray: iter-tools-es

- id: kotlin.collections.maxBy
  type: call
  template:
    pattern: reduce((a, b) => cMax(~0~(a), ~0~(b)), ~this~)
    imports:
      reduce: iter-tools-es
      cMax: @lightningkite/khrysalis-runtime

- id: kotlin.collections.minBy
  type: call
  template:
    pattern: reduce((a, b) => cMin(~0~(a), ~0~(b)), ~this~)
    imports:
      reduce: iter-tools-es
      cMin: @lightningkite/khrysalis-runtime

- id: kotlin.collections.maxByOrNull
  type: call
  template:
    pattern: reduceOr((a, b) => cMax(~0~(a), ~0~(b)), ~this~)
    imports:
      reduceOr: @lightningkite/khrysalis-runtime
      cMax: @lightningkite/khrysalis-runtime

- id: kotlin.collections.minByOrNull
  type: call
  template:
    pattern: reduceOr((a, b) => cMin(~0~(a), ~0~(b)), ~this~)
    imports:
      reduceOr: @lightningkite/khrysalis-runtime
      cMin: @lightningkite/khrysalis-runtime

- id: kotlin.collections.max
  type: call
  template:
    pattern: reduce(cMax, ~this~)
    imports:
      reduce: iter-tools-es
      cMax: @lightningkite/khrysalis-runtime

- id: kotlin.collections.min
  type: call
  template:
    pattern: reduce(cMin, ~this~)
    imports:
      reduce: iter-tools-es
      cMin: @lightningkite/khrysalis-runtime

- id: kotlin.collections.maxOrNull
  type: call
  template:
    pattern: reduceOr(cMax, ~this~)
    imports:
      reduceOr: @lightningkite/khrysalis-runtime
      cMax: @lightningkite/khrysalis-runtime

- id: kotlin.collections.minOrNull
  type: call
  template:
    pattern: reduceOr(cMin, ~this~)
    imports:
      reduceOr: @lightningkite/khrysalis-runtime
      cMin: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: []
  template:
    pattern: execPipe(~this~, join(~separator~))
    imports:
      execPipe: iter-tools-es
      join: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: [separator]
  template:
    pattern: execPipe(~this~, join(~separator~))
    imports:
      execPipe: iter-tools-es
      join: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: [transform]
  template:
    pattern: execPipe(~this~, map(~transform~), join())
    imports:
      execPipe: iter-tools-es
      map: iter-tools-es
      join: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: [separator, transform]
  template:
    pattern: execPipe(~this~, map(~transform~), join(~separator~))
    imports:
      execPipe: iter-tools-es
      map: iter-tools-es
      join: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: [separator, transform, prefix]
  template:
    pattern: (~prefix~ + execPipe(~this~, map(~transform~), join(~separator~)))
    imports:
      execPipe: iter-tools-es
      map: iter-tools-es
      join: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: [separator, transform, prefix, postfix]
  template:
    pattern: (~prefix~ + execPipe(~this~, map(~transform~), join(~separator~)) + ~postfix~)
    imports:
      execPipe: iter-tools-es
      map: iter-tools-es
      join: @lightningkite/khrysalis-runtime

- id: kotlin.collections.joinToString
  type: call
  suppliedArguments: [separator, transform, postfix]
  template:
    pattern: (execPipe(~this~, map(~transform~), join(~separator~)) + ~postfix~)
    imports:
      execPipe: iter-tools-es
      map: iter-tools-es
      join: @lightningkite/khrysalis-runtime
