#
#  /* SHARED DECLARATIONS
#    typealias Canvas = Canvas
#
#  fun Canvas.clipRect(left: Float, top: Float, right: Float, bottom: Float)
#  fun Canvas.clipRect(rect: RectF)
#  fun Canvas.drawCircle(cx: Float, cy: Float, radius: Float, paint: Paint)
#  fun Canvas.drawRect(left: Float, top: Float, right: Float, bottom: Float, paint: Paint)
#  fun Canvas.drawRect(rect: RectF, paint: Paint)
#  fun Canvas.drawOval(left: Float, top: Float, right: Float, bottom: Float, paint: Paint)
#  fun Canvas.drawOval(rect: RectF, paint: Paint)
#  fun Canvas.drawRoundRect(left: Float, top: Float, right: Float, bottom: Float, rx: Float, ry: Float, paint: Paint)
#  fun Canvas.drawRoundRect(rect: RectF, rx: Float, ry: Float, paint: Paint)
#  fun Canvas.drawLine(x1: Float, y1: Float, x2: Float, y2: Float, paint: Paint)
#  fun Canvas.drawPath(path: Path, paint: Paint)
#    fun Canvas.save()
#    fun Canvas.restore()
#  fun Canvas.translate(dx: Float, dy: Float)
#  fun Canvas.scale(scaleX: Float, scaleY: Float)
#  fun Canvas.rotate(degrees: Float)
#
#    */
---
- id: android.graphics.Canvas
  type: type
  template: CanvasRenderingContext2D

- id: android.graphics.Canvas.clipRect
  type: call
  arguments: [kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float]
  template:
    pattern: ~this~.clip(pathFromLTRB(~0~, ~1~, ~2~, ~3~))
    imports:
      pathFromLTRB: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.clipRect
  type: call
  arguments: [android.graphics.RectF]
  template:
    pattern: ~this~.clip(pathFromRectF(~0~))
    imports:
      pathFromRectF: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawCircle
  type: call
  template: ~this~.beginPath(); ~this~.arc(~0~, ~1~, ~2~, 0, Math.PI * 2); ~3~.complete(~this~)

- id: android.graphics.Canvas.drawRect
  type: call
  arguments: [kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float, android.graphics.Paint]
  template:
    pattern: ~4~.render(~this~, pathFromLTRB(~0~, ~1~, ~2~, ~3~))
    imports:
      pathFromLTRB: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawRect
  type: call
  arguments: [android.graphics.RectF, android.graphics.Paint]
  template:
    pattern: ~1~.render(~this~, pathFromRectF(~0~))
    imports:
      pathFromRectF: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawOval
  type: call
  arguments: [kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float, android.graphics.Paint]
  template:
    pattern: ~4~.render(~this~, pathOvalFromLTRB(~0~, ~1~, ~2~, ~3~))
    imports:
      pathOvalFromLTRB: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawOval
  type: call
  arguments: [android.graphics.RectF, android.graphics.Paint]
  template:
    pattern: ~1~.render(~this~, pathOvalFromRectF(~0~))
    imports:
      pathOvalFromRectF: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawRoundRect
  type: call
  arguments: [kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float, android.graphics.Paint]
  template:
    pattern: ~6~.render(~this~, pathRoundedFromLTRB(~0~, ~1~, ~2~, ~3~, ~4~, ~5~))
    imports:
      pathRoundedFromLTRB: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawRoundRect
  type: call
  arguments: [android.graphics.RectF, kotlin.Float, kotlin.Float, android.graphics.Paint]
  template:
    pattern: ~3~.render(~this~, pathRoundedFromRectF(~0~, ~1~, ~2~))
    imports:
      pathRoundedFromRectF: '@lightningkite/khrysalis-runtime'

- id: android.graphics.Canvas.drawLine
  type: call
  arguments: [kotlin.Float, kotlin.Float, kotlin.Float, kotlin.Float, android.graphics.Paint]
  template: ~this~.beginPath(); ~this~.moveTo(~0~, ~1~); ~this~.lineTo(~2~, ~3~); ~4~.complete(~this~)

- id: android.graphics.Canvas.drawPath
  type: call
  template: ~1~.render(~this~, ~0~)

- id: android.graphics.Canvas.save
  type: call
  template: ~this~.save()

- id: android.graphics.Canvas.restore
  type: call
  template: ~this~.restore()

- id: android.graphics.Canvas.translate
  type: call
  template: ~this~.translate(~0~, ~1~)

- id: android.graphics.Canvas.scale
  type: call
  template: ~this~.scale(~0~, ~1~)

- id: android.graphics.Canvas.rotate
  type: call
  template: ~this~.rotate(~0~ * Math.PI / 180)

- id: android.graphics.Canvas.concat
  type: call
  template:
    pattern: applyMatrixToCanvas(~this~, ~0~)
    imports:
      applyMatrixToCanvas: '@lightningkite/khrysalis-runtime'