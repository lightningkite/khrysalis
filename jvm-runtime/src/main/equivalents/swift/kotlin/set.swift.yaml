---

## Types
- id: kotlin.collections.Set
  type: type
  template: Set<~T0~>
- id: kotlin.collections.MutableSet
  type: type
  requiresMutable: true
  template: Set<~T0~>
- id: kotlin.collections.HashSet
  type: type
  requiresMutable: true
  template: Set<~T0~>
- id: java.util.HashSet
  type: type
  requiresMutable: true
  template: Set<~T0~>

## Creation
- id: kotlin.collections.HashSet
  type: call
  hasExplicitTypeArguments: true
  template: Set<~T0~>()
- id: kotlin.collections.HashSet
  type: call
  template: Set()
- id: java.util.HashSet
  type: call
  hasExplicitTypeArguments: true
  template: Set<~T0~>()
- id: java.util.HashSet
  type: call
  template: Set()

- id: kotlin.collections.setOf
  type: call
  template: "([~*~] as Set<~T0~>)"

- id: kotlin.collections.mutableSetOf
  type: call
  template: "([~*~] as Set<~T0~>)"

- id: kotlin.collections.hashSetOf
  type: call
  template: "([~*~] as Set<~T0~>)"


## Operations

- id: kotlin.collections.MutableSet.add
  type: call
  template: '~this~.insert(~0~).inserted'

- id: kotlin.collections.MutableSet.add
  type: call
  usedAsExpression: false
  template: '~this~.insert(~0~)'

- id: java.util.HashSet.add
  type: call
  template: '~this~.insert(~0~).inserted'

- id: java.util.HashSet.add
  type: call
  usedAsExpression: false
  template: '~this~.insert(~0~)'

- id: java.util.HashSet.remove
  type: call
  template: ~this~.remove(~0~)

- id: kotlin.collections.MutableSet.remove
  type: call
  template: ~this~.remove(~0~)

- id: kotlin.collections.plusAssign
  actualReceiver: kotlin.collections.MutableSet
  type: call
  template: '~this~.insert(~0~)'

- id: kotlin.collections.plus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.collections.Iterable]
  priorityModifier: 999
  template: '~this~.union(~0~)'

- id: kotlin.collections.plus
  receiver: kotlin.collections.Set
  priorityModifier: 999
  type: call
  template: '~this~.union([~0~])'

- id: kotlin.collections.minus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.collections.Iterable]
  template: '~this~.subtracting(~0~)'

- id: kotlin.collections.minus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.Any]
  template: '~this~.subtracting([~0~])'
