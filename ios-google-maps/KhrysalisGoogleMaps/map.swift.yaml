---
- id: com.google.android.gms.maps.MapView
  type: type
  template:
    pattern: MKMapView
    imports: [MapKit]

- id: com.google.android.gms.maps.MapView.getMapAsync
  type: call
  template: (~0~)(this)

- id: com.google.android.gms.maps.GoogleMap
  type: type
  template:
    pattern: MKMapView
    imports: [MapKit]

# getCameraPosition

- id: com.google.android.gms.maps.GoogleMap.getCameraPosition
  type: call
  template: ~this~.camera
- id: com.google.android.gms.maps.GoogleMap.cameraPosition
  type: get
  template: ~this~.camera

- id: com.google.android.gms.maps.model.CameraPosition
  type: type
  template: MKMapCamera
- id: com.google.android.gms.maps.model.CameraPosition.target
  type: get
  template: ~this~.centerCoordinate
- id: com.google.android.gms.maps.model.CameraPosition.zoom
  type: get
  template: ~this~.zoom
- id: com.google.android.gms.maps.model.CameraPosition.tilt
  type: get
  template: ~this~.pitch
- id: com.google.android.gms.maps.model.CameraPosition.bearing
  type: get
  template: ~this~.heading

# getMaxZoomLevel
- id: com.google.android.gms.maps.GoogleMap.getMaxZoomLevel
  type: call
  template: ~this~.getMaxZoom()
- id: com.google.android.gms.maps.GoogleMap.maxZoomLevel
  type: get
  template: ~this~.getMaxZoom()

# getMinZoomLevel
- id: com.google.android.gms.maps.GoogleMap.getMinZoomLevel
  type: call
  template: ~this~.getMinZoom()
- id: com.google.android.gms.maps.GoogleMap.minZoomLevel
  type: get
  template: ~this~.getMinZoom()

# LatLng
- id: com.google.android.gms.maps.model.LatLng
  type: type
  template:
    pattern: LatLng
    imports:
      LatLng: leaflet

# CameraUpdate
- id: com.google.android.gms.maps.CameraUpdate
  type: type
  template:
    pattern: [LatLngExpression, number]
    imports:
      LatLngExpression: leaflet
      ZoomPanOptions: leaflet

# moveCamera
- id: com.google.android.gms.maps.GoogleMap.moveCamera
  type: call
  template: ~this~.setView(...~0~)

# animateCamera
- id: com.google.android.gms.maps.GoogleMap.animateCamera
  type: call
  template: '~this~.setView(...~0~.concat([{ animate: true }]))'

# animateCamera
# animateCamera
# stopAnimation
# getMapType
# setMapType
# isMyLocationEnabled
# setMyLocationEnabled
# getProjection

# setOnCameraMoveStartedListener
- id: com.google.android.gms.maps.GoogleMap.setOnCameraMoveStartedListener
  type: call
  template:
    pattern: '~this~.on("movestart", (_ev) => { ~L0~ })'
    lambdaTransforms:
      0: ["0"]
# setOnCameraMoveListener
- id: com.google.android.gms.maps.GoogleMap.setOnCameraMoveListener
  type: call
  template:
    pattern: '~this~.on("move", (_ev) => { ~L0~ })'
# setOnCameraIdleListener
- id: com.google.android.gms.maps.GoogleMap.setOnCameraIdleListener
  type: call
  template:
    pattern: '~this~.on("moveend", (_ev) => { ~L0~ })'
# setOnMapClickListener
- id: com.google.android.gms.maps.GoogleMap.setOnMapClickListener
  type: call
  template:
    pattern: '~this~.on("click", (_ev) => { ~L0~ })'
    lambdaTransforms:
      0: ["_ev.latlng"]
# setOnMapLongClickListener
- id: com.google.android.gms.maps.GoogleMap.setOnMapLongClickListener
  type: call
  template:
    pattern: '~this~.on("contextmenu", (_ev) => { ~L0~ })'
    lambdaTransforms:
      0: ["_ev.latlng"]

# Places AutoComplete
- id: com.google.android.libraries.places.api.model.Place
  type: type
  template: GMSPlace
- id: com.google.android.libraries.places.api.model.AutocompletePrediction.placeId
  type: get
  template: '~this~.placeID'
- id: com.google.android.libraries.places.api.model.AutocompletePrediction.getFullText
  type: call
  template: '~this~.attributedFullText'
- id: com.google.android.libraries.places.api.model.AutocompletePrediction.getSecondaryText
  type: call
  template: '~this~.attributedPrimaryText'
- id: com.google.android.libraries.places.api.model.AutocompletePrediction.getPrimaryText
  type: call
  template: '~this~.attributedSecondaryText'
- id: com.google.android.libraries.places.api.model.AutocompletePrediction.distanceMeters
  type: get
  template: '~this~.distanceMeters?.intValue'


# SpannableString

- id: kotlin.Any.toString
  type: call
  actualReceiver: android.text.SpannableString
  template: ~this~.string