// Generated by Khrysalis TypeScript converter
// File: /home/josephivie/IdeaProjects/khrysalis/kotlin-compiler-plugin-typescript/testData/testCursedClasses.shared.kt
// Package: com.test.cursedclasses
// Imported FQ name: com.test.cursedclasses.A SKIPPED due to same file
// Imported FQ name: com.test.cursedclasses.A TS A
// Imported FQ name: com.test.cursedclasses.A.B TS B
// Imported FQ name: com.test.cursedclasses.A.B.C TS C
// Imported FQ name: com.test.cursedclasses.A.B.C.D.<init>.jank TS jank
// Imported FQ name: com.test.cursedclasses.A.B.C.D.E SKIPPED due to same file
// Imported FQ name: com.test.cursedclasses.A.B.C.D.E TS ABCDE
// Imported FQ name: com.test.cursedclasses.A.B.C.D.E TS ABCDEDefaults
// Imported FQ name: com.test.cursedclasses.F.G SKIPPED due to same file
// Imported FQ name: com.test.cursedclasses.F.G TS FG
// Imported FQ name: com.test.cursedclasses.F.H SKIPPED due to same file
// Imported FQ name: com.test.cursedclasses.F.H TS FH
// Imported FQ name: com.test.cursedclasses.F.H.x TS x
// Imported FQ name: kotlin.Int TS Int
// Imported FQ name: kotlin.Unit TS Unit
// Imported FQ name: kotlin.io.println TS println

export class A {
    
    public static B = class B {
        
        public static C = class C {
            
            public static D = class D {
                public constructor() {
                }
                
                public static constructorkotlinInt(jank: Int) {
                    let result = new D();
                    
                    println(jank)
                    
                    return result;
                }
                
            }
        }
    }
}

export interface F {
    
    
    
}
export class FDefaults {
}

export function main(){
    println("Clearly, we hate ourselves.");
    println(FH.INSTANCE.x);
    const thing = new class Anon implements ABCDE {
        public static implementsInterfaceComTestCursedclassesABCDE = true;
        public constructor() {
            this.hello = "Hello World!";
        }
        
        public readonly hello = "Hello World!";
        
        public test(): Unit { return ABCDEDefaults.test(this); }
    }();
    
    const other = new FG();
    
    
    new A();
    new A.B();
    new A.B.C();
    new A.B.C.D();
    return A.B.C.D.constructorkotlinInt(4);
}

export interface ABCDE {
    
    test(): void
}
export class ABCDEDefaults {
    public static test(this_Test: ABCDE){ return println("Hi!"); }
}
export class FG {
    
}
export class FH {
    private constructor() {
        this.x = 0;
    }
    public static INSTANCE = new FH();
    
    readonly x: Int;
    
}

