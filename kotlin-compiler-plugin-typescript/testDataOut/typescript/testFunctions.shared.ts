// Generated by Khrysalis TypeScript converter
// File: /home/josephivie/IdeaProjects/khrysalis/kotlin-compiler-plugin-typescript/testData/testFunctions.shared.kt
// Package: com.test.functions
// Imported FQ name: com.test.functions.TestClass SKIPPED due to same file
// Imported FQ name: com.test.functions.TestClass TS TestClass
// Imported FQ name: com.test.functions.TestClass.memberExtensionFunction TS ComTestFunctionsTestClass2MemberExtensionFunction
// Imported FQ name: com.test.functions.TestClass.memberFunction TS memberFunction
// Imported FQ name: com.test.functions.TestClass.memberGenericFunction TS memberGenericFunction
// Imported FQ name: com.test.functions.TestClass.memberGenericFunction.T TS T
// Imported FQ name: com.test.functions.TestClass.memberGenericFunction.item TS item
// Imported FQ name: com.test.functions.TestClass.testExtension TS testExtension
// Imported FQ name: com.test.functions.TestClass2 SKIPPED due to same file
// Imported FQ name: com.test.functions.TestClass2 TS TestClass2
// Imported FQ name: com.test.functions.extensionFunction SKIPPED due to same file
// Imported FQ name: com.test.functions.extensionFunction TS ComTestFunctionsTestClassExtensionFunction
// Imported FQ name: com.test.functions.genericExtensionFunction SKIPPED due to same file
// Imported FQ name: com.test.functions.genericExtensionFunction TS KotlinAnyGenericExtensionFunction
// Imported FQ name: com.test.functions.genericExtensionFunction.E TS E
// Imported FQ name: com.test.functions.genericExtensionFunction.T TS T
// Imported FQ name: com.test.functions.genericExtensionFunction.element TS element
// Imported FQ name: com.test.functions.main.instance TS instance
// Imported FQ name: com.test.functions.topLevelFunction SKIPPED due to same file
// Imported FQ name: com.test.functions.topLevelFunction TS topLevelFunction
// Imported FQ name: com.test.functions.topLevelFunction.localFunction TS localFunction
// Imported FQ name: com.test.functions.topLevelGenericFunction SKIPPED due to same file
// Imported FQ name: com.test.functions.topLevelGenericFunction TS topLevelGenericFunction
// Imported FQ name: com.test.functions.topLevelGenericFunction.T TS T
// Imported FQ name: com.test.functions.topLevelGenericFunction.item TS item
// Imported FQ name: com.test.functions.varargFunction SKIPPED due to same file
// Imported FQ name: com.test.functions.varargFunction TS restParamsFunction
// Imported FQ name: com.test.functions.varargFunction.item TS item
// Imported FQ name: com.test.functions.varargFunction.numbers TS numbers

export function topLevelFunction(){
    console.log("Hello world!");
    function localFunction(){
        console.log("Hello from local!");
    }
    localFunction();
}
export function topLevelGenericFunction<T>(item: T){
    console.log(`Hello ${item}`);
}
export function restParamsFunction(...numbers: number[]){
    for (const item of numbers) {
        console.log(`Item: ${item}`);
    }
}

export class TestClass {
    
    public memberFunction(a: number = 2, b: number = 3, c: number = 4){
        console.log("Hello from TestClass!");
    }
    public memberGenericFunction<T>(item: T){
        console.log(`Hello ${item} from TestClass!`);
    }
    public ComTestFunctionsTestClass2MemberExtensionFunction(this_MemberExtensionFunction: TestClass2){
        console.log(`Hello ${this_MemberExtensionFunction} from ${this}!`);
    }
    public testExtension(){
        this.ComTestFunctionsTestClass2MemberExtensionFunction(new TestClass2());
    }
}

export class TestClass2 {
    
    public test(){
        console.log("Hi!");
    }
}

export function ComTestFunctionsTestClassExtensionFunction(this_ExtensionFunction: TestClass){
    console.log("From an extension:");
    this_ExtensionFunction.memberFunction(undefined, undefined, undefined);
}
export function KotlinAnyGenericExtensionFunction<T, E>(this_GenericExtensionFunction: T, element: E){
    console.log(`Hello ${element} from ${this_GenericExtensionFunction}!`);
}

export function main(){
    topLevelFunction();
    topLevelGenericFunction(2);
    restParamsFunction(1);
    const instance = new TestClass();
    
    instance.memberFunction(undefined, undefined, undefined);
    instance.memberFunction(1, undefined, undefined);
    instance.memberFunction(undefined, 1, undefined);
    instance.memberFunction(undefined, undefined, 1);
    instance.memberFunction(2, undefined, 1);
    instance.memberGenericFunction(32/*comment*/);
    instance.testExtension();
    ComTestFunctionsTestClassExtensionFunction(instance);
    KotlinAnyGenericExtensionFunction(instance, 8);
}

export const _anotherThing = 2;
export function getAnotherThing(): number { return _anotherThing; }

