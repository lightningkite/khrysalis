// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: testExceptions.shared.kt
// Package: com.test.exceptions

//! Declares com.test.exceptions.failableAction
export function failableAction(state: Boolean = true): void {
    if (state) {
        throw IllegalStateException.constructorString("Reasons");
    } else {
        throw IllegalArgumentException.constructorString("I won't do that for you.  You said no to state.");
    }
}

//! Declares com.test.exceptions.test
export function test(): void {
    try {
        failableAction(undefined);
    } catch (_e) { let e = _e as Exception; e.printStackTrace()}
    
    try {
        failableAction(undefined);
    } catch (e) {
        if (e instanceof IllegalStateException) {
            println("IllegalStateException was thrown")
        } else if (e instanceof IllegalArgumentException) {
            println("IllegalArgumentException was thrown")
        } else if (e instanceof Exception) {
            println("Something else was thrown")
        } else throw e;
    }
    
    const value = ((): Boolean => {
            try {
                failableAction(undefined);
                true;
            } catch (_e) { let e = _e as Exception; e.printStackTrace()
            false}
    })();
    
}
