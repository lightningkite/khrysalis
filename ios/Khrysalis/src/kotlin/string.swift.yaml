---
- id: kotlin.Char
  type: type
  template: Character

- id: kotlin.String
  type: type
  template: String

- id: kotlin.CharSequence
  type: type
  template: String

# Operators

- id: kotlin.text.toLowerCase
  type: call
  template: ~this~.lowercased()
- id: kotlin.text.toUpperCase
  type: call
  template: ~this~.uppercased()
- id: kotlin.text.isLowerCase
  type: call
  template: ~this~.isLowercase
- id: kotlin.text.isUpperCase
  type: call
  template: ~this~.isUppercase
- id: kotlin.text.trim
  type: call
  arguments: []
  template: "~this~.trimmingCharacters(in: .whitespacesAndNewlines)"
- id: kotlin.text.padEnd
  type: call
  template: "~this~.padding(toLength: ~0~, withPad: ~1~, startingAtIndex: 0)"
- id: kotlin.text.isEmpty
  type: call
  template: ~this~.isEmpty
- id: kotlin.text.isNullOrEmpty
  type: call
  template: (~this~?.isEmpty ?? true)
- id: kotlin.text.isNotEmpty
  type: call
  template: (!~this~.isEmpty)
- id: kotlin.text.isBlank
  type: call
  template: "~this~.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty"
- id: kotlin.text.isNotBlank
  type: call
  template: "!~this~.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty"
- id: kotlin.text.isNullOrBlank
  type: call
  template: "(~this~?.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty ?? true)"
- id: kotlin.text.orEmpty
  type: call
  template: (~this~ ?? "")
- id: kotlin.text.replace
  type: call
  template: "~this~.replacingOccurrences(of: ~0~, with: ~1~)"
- id: kotlin.text.startsWith
  type: call
  template: "~this~.starts(with: ~0~)"
- id: kotlin.text.endsWith
  type: call
  template: "~this~.ends(with: ~0~)"
- id: kotlin.text.split
  type: call
  template: ~this~.split(~*~)
- id: kotlin.text.lines
  type: call
  template: ~this~.split('\n')
- id: kotlin.text.contains
  type: call
  template: (~this~.indexOf(~0~) != -1)

# Characters


# String
- id: kotlin.String.plus
  type: call
  infix: true
  template: ~this~ + ~0~

- id: kotlin.String.length
  type: get
  template: ~this~.count

- id: kotlin.String.plus
  type: call
  template: (~this~ + ~0~)

- id: kotlin.String.get
  type: call
  template: ~this~[~0~]

- id: kotlin.text.firstOrNull
  type: call
  template: '~this~.getOrNull(index: 0)'

- id: kotlin.text.first
  type: call
  template: ~this~[0]

- id: kotlin.Any.toString
  type: call
  template: 'String(describing: ~this~)'

# CharSequence
- id: kotlin.CharSequence.plus
  type: call
  infix: true
  template: ~this~ + ~0~

- id: kotlin.CharSequence.plus
  type: call
  template: (~this~ + ~0~)

- id: kotlin.CharSequence.get
  type: call
  template: ~this~[~0~]

# Regex

- id: kotlin.text.Regex
  type: type
  template: NSRegularExpression
- id: kotlin.text.Regex
  type: call
  template: "NSRegularExpression(pattern: ~0~, options: [])"

# String Builder
- id: kotlin.text.StringBuilder
  type: type
  template: Box<String>
- id: kotlin.text.StringBuilder
  type: call
  template: 'Box("")'
- id: kotlin.text.StringBuilder.append
  type: call
  template: ~this~.value.append(~0~)
- id: java.lang.StringBuilder.append
  type: call
  template: ~this~.value.append(~0~)
- id: kotlin.text.appendln
  type: call
  template: ~this~.value.append(~0~ + "\n")
- id: kotlin.text.appendln
  type: call
  arguments: []
  template: ~this~.value.append("\n")
- id: kotlin.text.StringBuilder.toString
  type: call
  template: ~this~.value
- id: kotlin.Any.toString
  type: call
  actualReceiver: kotlin.text.StringBuilder
  template: ~this~.value
- id: java.lang.StringBuilder.toString
  type: call
  template: ~this~.value
- id: kotlin.Any.toString
  type: call
  actualReceiver: java.lang.StringBuilder
  template: ~this~.value

# Converting to Numbers

- id: kotlin.text.toByte
  type: call
  template: Int8(~this~)!
- id: kotlin.text.toShort
  type: call
  template: Int16(~this~)!
- id: kotlin.text.toInt
  type: call
  template: Int(~this~)!
- id: kotlin.text.toLong
  type: call
  template: Int64(~this~)!
- id: kotlin.text.toFloat
  type: call
  template: Float(~this~)!
- id: kotlin.text.toDouble
  type: call
  template: Double(~this~)!

- id: kotlin.text.toByteOrNull
  type: call
  template: Int8(~this~)
- id: kotlin.text.toShortOrNull
  type: call
  template: Int16(~this~)
- id: kotlin.text.toIntOrNull
  type: call
  template: Int(~this~)
- id: kotlin.text.toLongOrNull
  type: call
  template: Int64(~this~)
- id: kotlin.text.toFloatOrNull
  type: call
  template: Float(~this~)
- id: kotlin.text.toDoubleOrNull
  type: call
  template: Double(~this~)