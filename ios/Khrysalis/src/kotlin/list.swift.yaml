---

# Lists

- id: kotlin.collections.listOf
  type: call
  hasExplicitTypeArguments: true
  template: "[~*~] as Array<~T0~>"
- id: kotlin.collections.mutableListOf
  type: call
  hasExplicitTypeArguments: true
  template: "[~*~] as Array<~T0~>"
- id: kotlin.collections.arrayListOf
  type: call
  hasExplicitTypeArguments: true
  template: "[~*~] as Array<~T0~>"
- id: kotlin.collections.listOf
  type: call
  template: "[~*~]"
- id: kotlin.collections.mutableListOf
  type: call
  template: "[~*~]"
- id: kotlin.collections.arrayListOf
  type: call
  template: "[~*~]"

- id: kotlin.collections.List
  type: type
  template: Array<~T0~>
- id: kotlin.collections.List
  type: typeRef
  template: Array
- id: kotlin.collections.MutableList
  type: type
  requiresMutable: true
  template: Array<~T0~>
- id: kotlin.collections.MutableList
  type: typeRef
  template: Array
- id: kotlin.collections.ArrayList
  type: type
  requiresMutable: true
  template: Array<~T0~>
- id: kotlin.collections.ArrayList
  type: typeRef
  template: Array

- id: kotlin.collections.ArrayList
  type: call
  arguments: []
  template: "[]"
- id: kotlin.collections.ArrayList
  type: call
  arguments: []
  hasExplicitTypeArguments: true
  template: "[] as Array<~T0~>"
  
# List Operations
- id: kotlin.collections.List.indexOf
  type: call
  actualReceiver: kotlin.collections.List
  template: "(~this~.firstIndex(of: ~0~) ?? -1)"
- id: kotlin.collections.List.get
  type: call
  template: ~this~[~0~]
- id: kotlin.collecitons.List.subList
  type: call
  template: Array(~this~[~0~ ..< ~1~])
- id: kotlin.collections.isNotEmpty
  type: call
  template: (!~this~.isEmpty)

# Mutable List Operations
- id: kotlin.collections.MutableCollection.add
  actualReceiver: kotlin.collections.MutableList
  type: call
  template: "~this~.append(~0~)"
- id: kotlin.collections.MutableList.add
  type: call
  arguments: [kotlin.Int, "*"]
  template: "~this~.insert(~1~, at: ~0~)"
- id: kotlin.collections.MutableList.set
  type: call
  template: "~this~[~0~] = ~1~"
- id: kotlin.collections.MutableList.remove
  type: call
  template: "~this~.remove(~0~)"
- id: kotlin.collections.removeAll
  type: call
  template: "~this~.removeAll(where: ~0~)"
- id: kotlin.collections.MutableList.removeAt
  type: call
  template: "~this~.remove(at: ~0~)"
- id: kotlin.collections.MutableCollection.clear
  actualReceiver: kotlin.collections.MutableList
  type: call
  template: "~this~.removeAll()"
- id: java.util.AbstractList.clear
  type: call
  template: "~this~.removeAll()"
- id: kotlin.collections.MutableCollection.addAll
  actualReceiver: kotlin.collections.MutableList
  type: call
  template: "~this~.insert(contentsOf: ~0~, at: ~this~.count - 1)"
- id: kotlin.collections.MutableCollection.addAll
  actualReceiver: kotlin.collections.MutableList
  type: call
  arguments: [kotlin.Int]
  template: "~this~.insert(contentsOf: ~1~, at: ~0~)"

# Extensions
- id: kotlin.collections.indexOfFirst
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~.firstIndex(~0~)
- id: kotlin.collections.indexOfLast
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~.lastIndex(~0~)
- id: kotlin.collections.first
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~.first!
- id: kotlin.collections.firstOrNull
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~.first
- id: kotlin.collections.last
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~.last!
- id: kotlin.collections.lastOrNull
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~.last
- id: kotlin.collections.lastIndex
  type: get
  actualReceiver: kotlin.collections.List
  template: (~this~.count - 1)
- id: kotlin.collections.single
  type: call
  actualReceiver: kotlin.collections.List
  template: '(~this~.count == 1 ? ~this~[0] : fatalError("Assertion that list is only one element failed"))'
- id: kotlin.collections.singleOrNull
  type: call
  actualReceiver: kotlin.collections.List
  template: "(~this~.count == 1 ? ~this~[0] : nil)"
  
- id: kotlin.collections.drop
  type: call
  actualReceiver: kotlin.collections.List
  template: "Array(~this~.dropFirst(~0~))"
- id: kotlin.collections.dropLast
  type: call
  actualReceiver: kotlin.collections.List
  template: "Array(~this~.dropLast(0, -~0~))"
- id: kotlin.collections.dropWhile
  type: call
  actualReceiver: kotlin.collections.List
  template: "Array(~this~.drop(while: ~0~))"
#- id: kotlin.collections.dropLastWhile
  
- id: kotlin.collections.take
  type: call
  actualReceiver: kotlin.collections.List
  template: "Array(~this~.prefix(~0~))"
- id: kotlin.collections.takeLast
  type: call
  actualReceiver: kotlin.collections.List
  template: "Array(~this~.suffix(~0~))"
- id: kotlin.collections.takeWhile
  type: call
  actualReceiver: kotlin.collections.List
  template: "Array(~this~.prefix(while: ~0~))"
#- id: kotlin.collections.takeLastWhile

- id: kotlin.collections.filterIndexed
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO
- id: kotlin.collections.filterNot
  type: call
  actualReceiver: kotlin.collections.List
  template: "~this~.filter({ x in !~0~(x) })"
- id: kotlin.collections.filterNotNull
  type: call
  actualReceiver: kotlin.collections.List
  template: '~this~.compactMap({ $0 })'

- id: kotlin.collections.sortBy
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO
- id: kotlin.collections.sortByDescending
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO
- id: kotlin.collections.sortedBy
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO
- id: kotlin.collections.sortedByDescending
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO

# TODO: groupBy

- id: kotlin.collections.mapIndexed
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO
- id: kotlin.collections.mapNotNull
  type: call
  actualReceiver: kotlin.collections.List
  template: '~this~.compactMap(~0~)'
- id: kotlin.collections.mapIndexedNotNull
  type: call
  actualReceiver: kotlin.collections.List
  template: ~this~ #TODO

# TODO: Fold, max, min, reduce, scan