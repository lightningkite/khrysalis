---
- id: com.lightningkite.khrysalis.views.android.MultilineEditText
  type: type
  template: UITextView
  xmlDefer: [android.widget.EditText]
  xmlSetup: ~this~.addDismissButton()

- id: android.widget.AutoCompleteTextView
  type: type
  template: UIAutoCompleteTextField
  xmlDefer: [android.widget.EditText]

- id: android.widget.EditText
  type: type
  template: UITextField
  xmlDefer: [contentEdgePadding, android.view.View]

- id: contentEdgePadding.padding
  type: attribute
  template: '~this~.contentEdgeInsets = UIEdgeInsets(top: ~value~, left: ~value~, bottom: ~value~, right: ~value~)'
- id: contentEdgePadding.paddingLeft
  type: attribute
  template: '~this~.contentEdgeInsets.left = ~value~'
- id: contentEdgePadding.paddingRight
  type: attribute
  template: '~this~.contentEdgeInsets.right = ~value~'
- id: contentEdgePadding.paddingStart
  type: attribute
  template: '~this~.contentEdgeInsets.left = ~value~'
- id: contentEdgePadding.paddingEnd
  type: attribute
  template: '~this~.contentEdgeInsets.right = ~value~'
- id: contentEdgePadding.paddingTop
  type: attribute
  template: '~this~.contentEdgeInsets.top = ~value~'
- id: contentEdgePadding.paddingBottom
  type: attribute
  template: '~this~.contentEdgeInsets.bottom = ~value~'

- id: android.widget.EditText.hint
  type: attribute
  template: '~this~.placeholder = ~value~'
- id: android.widget.EditText.textColorHint
  type: attribute
  isColor: true
  template: '~this~.placeholderColor = ~value~'
- id: android.widget.EditText.inputType
  type: attribute
  template:
    split:
      on: ~value~
      by: '|'
      name: i0
      each:
        switch:
          on: ~i0~
          cases:
            'textCapCharacters':
              ~this~.autocapitalizationType = .allCharacters
            'textCapWords':
              ~this~.autocapitalizationType = .words
            'textCapSentences':
              ~this~.autocapitalizationType = .sentences
            'textAutoCorrect':
              ~this~.autocorrectionType = .yes
            'textAutoComplete':
              ~this~.autocorrectionType = .yes
            'textNoSuggestions':
              ~this~.spellCheckingType = .no
            'textUri':
              ~this~.keyboardType = .URL
              ~this~.textContentType = .URL
            'textEmailAddress':
              ~this~.textContentType = .emailAddress
              ~this~.keyboardType = .emailAddress
            'textPersonName':
              ~this~.textContentType = .name
            'textPostalAddress':
              ~this~.textContentType = .fullStreetAddress
            'textPassword':
              ~this~.textContentType = .password
              ~this~.isSecureTextEntry = true
            'textVisiblePassword':
              ~this~.textContentType = .password
            'number':
              ~this~.keyboardType = .numberPad
              ~this~.addDismissButton()
            'numberSigned':
              ~this~.keyboardType = .numbersAndPunctuation
              ~this~.addDismissButton()
            'numberDecimal':
              ~this~.keyboardType = .decimalPad
              ~this~.addDismissButton()
            'numberPassword':
              ~this~.keyboardType = .numberPad
              ~this~.addDismissButton()
              ~this~.textContentType = .password
              ~this~.isSecureTextEntry = true
            'phone':
              ~this~.keyboardType = .phonePad
              ~this~.addDismissButton()
              ~this~.textContentType = .telephoneNumber

- id: com.google.android.material.tabs.TabLayout
  type: type
  template: UISegmentedControl
  xmlDefer: [android.view.View]
  xmlSetup:
    view.tintColor = .clear
    view.backgroundColor = .clear

- id: com.google.android.material.tabs.TabLayout.tabMode
  type: attribute
  template:
    switch:
      on: ~value~
      cases:
        scrollable: view.apportionsSegmentWidthsByContent = true
        else: view.apportionsSegmentWidthsByContent = false

- id: com.google.android.material.tabs.TabLayout.tabGravity
  type: attribute
  template:
    switch:
      on: ~value~
      cases:
        center: view.apportionsSegmentWidthsByContent = true
        else: view.apportionsSegmentWidthsByContent = false

- id: com.google.android.material.tabs.TabLayout.tabTextColor
  type: attribute
  isColor: true
  template: "~this~.setTitleTextAttributes(
               [NSAttributedString.Key.foregroundColor: ~value~],
               for: .selected
             )
             ~this~.setTitleTextAttributes(
               [NSAttributedString.Key.foregroundColor: ~value~],
               for: .normal
             )
             ~this~.addIndicator(color: ~value~)"

- id: com.lightningkite.khrysalis.views.android.PreviewVariedFlipper
  type: type
  template: PreviewVariedFlipper
  xmlDefer: [android.widget.FrameLayout]

- id: androidx.recyclerview.widget.RecyclerView
  type: type
  template: UICollectionView
  xmlDefer: [android.view.View]
  xmlSetup: ~this~.backgroundColor = UIColor.clear

- id: com.lightningkite.khrysalis.views.android.VerticalRecyclerView
  type: type
  template: UICollectionView
  xmlDefer: [androidx.recyclerview.widget.RecyclerView]

- id: com.lightningkite.khrysalis.views.android.VerticalRecyclerView.dividerPositions
  type: attribute
  template:
    split:
      on: ~value~
      by: '|'
      name: v
      each:
        switch:
          on: ~v~
          cases:
            start: ~this~.separatorStyle = .singleLine
            between: ~this~.separatorStyle = .singleLine
            end: ~this~.separatorStyle = .singleLine
            else: ~this~.separatorStyle = .none

- id: com.lightningkite.khrysalis.views.android.VerticalRecyclerView.dividerColor
  type: attribute
  isColor: true
  template: '~this~.separatorColor = ~value~'

- id: com.lightningkite.khrysalis.views.android.VerticalRecyclerView.dividerSize
  type: attribute
  template: '//It is not possible to have a different divider size currently, though requested.'

- id: com.lightningkite.khrysalis.views.android.VerticalRecyclerView.dividerHorizontalPadding
  type: attribute
  template: '~this~.separatorInset = UIEdgeInsets(top: 0, left: ~value~, bottom: 0, right: ~value~)'

- id: com.rd.PageIndicatorView
  type: type
  template: UIPageControl
  xmlDefer: [android.view.View]

- id: com.rd.PageIndicatorView.piv_selectedColor
  type: attribute
  template: ~this~.currentPageIndicatorTintColor = ~value~

- id: com.rd.PageIndicatorView.piv_unselectedColor
  type: attribute
  template: ~this~.pageIndicatorTintColor = ~value~

- id: androidx.viewpager.widget.ViewPager
  type: type
  template: UICollectionView
  xmlDefer: [android.view.View]
  xmlCreate: 'UICollectionView(frame: .zero, collectionViewLayout: ViewPagerLayout())'
  xmlSetup: '~this~.canCancelContentTouches = false
             ~this~.showsHorizontalScrollIndicator = false
             ~this~.backgroundColor = .clear'

- id: androidx.swiperefreshlayout.widget.SwipeRefreshLayout
  type: type
  template: UIView
  xmlSkip: true

- id: com.lightningkite.khrysalis.views.android.SwapView
  type: type
  template: SwapView
  xmlDefer: [android.view.View]

- id: androidx.core.widget.NestedScrollView
  type: type
  template: ScrollViewVertical
  xmlDefer: [android.widget.ScrollView]

- id: android.widget.ScrollView
  type: type
  template: ScrollViewVertical
  xmlDefer: [android.view.View]
  xmlAddChild: ~this~.addSubview(~value~)

- id: android.widget.HorizontalScrollView
  type: type
  template: ScrollViewHorizontal
  xmlDefer: [android.view.View]
  xmlAddChild: ~this~.addSubview(~value~)

- id: android.widget.ScrollView.fillViewport
  type: attribute
  template: '~this~.fillViewport = ~value~'

- id: android.widget.HorizontalScrollView.fillViewport
  type: attribute
  template: '~this~.fillViewport = ~value~'

- id: android.widget.LinearLayout
  type: type
  template: LinearLayout
  xmlDefer: [android.view.View]
  xmlAddChild: '~this~.addSubview(~value~, ~layout~)' # TODO: LAYOUT? How does this work?