// Generated by Khrysalis Swift converter - this file will be overwritten.
// File: views/geometry/PolygonF.shared.kt
// Package: com.lightningkite.khrysalis.views.geometry
import Foundation
import CoreGraphics

public class PolygonF : KDataClass {
    public var points: Array<CGPoint>
    public init(points: Array<CGPoint>) {
        self.points = points
        //Necessary properties should be initialized now
    }
    public func hash(into hasher: inout Hasher) {
        hasher.combine(points)
    }
    public static func == (lhs: PolygonF, rhs: PolygonF) -> Bool { return lhs.points == rhs.points }
    public var description: String { return "PolygonF(points = \(self.points))" }
    public func copy(points: Array<CGPoint>? = nil) -> PolygonF { return PolygonF(points: points ?? self.points) }
    
    public func contains(point: CGPoint) -> Bool {
        let intersections = self.points.indices.count(predicate: { (it) -> Bool in 
                var a = self.points[it]
                var b = self.points[(it + 1) % self.points.count]
                return Geometry.INSTANCE.rayIntersectsLine(rayX: point.x, rayY: point.y, rayToX: point.x + 100, rayToY: point.y, lineX1: a.x, lineY1: a.y, lineX2: b.x, lineY2: b.y)
        })
        return intersections % 2 == 1
    }
}


