// Generated by Khrysalis Swift converter - this file will be overwritten.
// File: Video.shared.kt
// Package: com.lightningkite.khrysalis
import Foundation

public class Video {
    public init() {
        //Necessary properties should be initialized now
    }
}
public class VideoReference : Video, KDataClass {
    public var uri: URL
    public init(uri: URL) {
        self.uri = uri
        super.init()
        //Necessary properties should be initialized now
    }
    public func hash(into hasher: inout Hasher) {
        hasher.combine(uri)
    }
    public static func == (lhs: VideoReference, rhs: VideoReference) -> Bool { return lhs.uri == rhs.uri }
    public var description: String { return "VideoReference(uri = \(self.uri))" }
    public func copy(uri: URL? = nil) -> VideoReference { return VideoReference(uri: uri ?? self.uri) }
}
public class VideoRemoteUrl : Video, KDataClass {
    public var url: String
    public init(url: String) {
        self.url = url
        super.init()
        //Necessary properties should be initialized now
    }
    public func hash(into hasher: inout Hasher) {
        hasher.combine(url)
    }
    public static func == (lhs: VideoRemoteUrl, rhs: VideoRemoteUrl) -> Bool { return lhs.url == rhs.url }
    public var description: String { return "VideoRemoteUrl(url = \(self.url))" }
    public func copy(url: String? = nil) -> VideoRemoteUrl { return VideoRemoteUrl(url: url ?? self.url) }
}

public extension String {
    func asVideo() -> Video { return VideoRemoteUrl(url: self) }
}
public extension URL {
    func asVideo() -> Video { return VideoReference(uri: self) }
}


