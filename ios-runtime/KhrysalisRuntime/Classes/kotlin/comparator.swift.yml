---
- id: kotlin.Comparable
  type: type
  protocol: true
  template: Comparable
- id: java.util.Comparable
  type: type
  protocol: true
  template: Comparable

- id: kotlin.Comparator
  type: type
  isFunctionType: true
  template:
    pattern: TypedComparator<~T0~>
    imports: [KhrysalisRuntime]
- id: java.util.Comparator
  type: type
  isFunctionType: true
  template: 
    pattern: TypedComparator<~T0~>
    imports: [KhrysalisRuntime]

- id: kotlin.Comparator
  type: call
  template: 'makeComparator(function: ~0~ as (~T0~, ~T0~)->Int)'

- id: java.util.Comparator
  type: call
  template: 'makeComparator(function: ~0~ as (~T0~, ~T0~)->Int)'

- id: kotlin.Comparator.compare
  type: call
  template: ~this~(~0~, ~1~).rawValue

- id: java.util.Comparator.compare
  type: call
  template: ~this~(~0~, ~1~).rawValue



# Coerce
- id: kotlin.ranges.coerceIn
  type: call
  template: Swift.min(Swift.max(~this~, ~0~), ~1~)
- id: kotlin.ranges.coerceAtMost
  type: call
  template: Swift.min(~this~, ~0~)
- id: kotlin.ranges.coerceAtLeast
  type: call
  template: Swift.max(~this~, ~0~)

- id: kotlin.comparisons.maxOf
  type: call
  template: Swift.max(~*~)

- id: kotlin.comparisons.minOf
  type: call
  template: Swift.min(~*~)