"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/FlatMappedObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
const operators_1 = require("rxjs/operators");
const ObservableProperty_shared_1 = require("./ObservableProperty.shared");
const ObservableProperty_ext_shared_1 = require("./ObservableProperty.ext.shared");
const MutableObservableProperty_shared_1 = require("./MutableObservableProperty.shared");
//! Declares com.lightningkite.khrysalis.observables.FlatMappedObservableProperty
class FlatMappedObservableProperty extends ObservableProperty_shared_1.ObservableProperty {
    constructor(basedOn, transformation) {
        super();
        this.basedOn = basedOn;
        this.transformation = transformation;
    }
    //! Declares com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.value
    get value() { return this.transformation(this.basedOn.value).value; }
    //! Declares com.lightningkite.khrysalis.observables.FlatMappedObservableProperty.onChange
    get onChange() { return ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this.basedOn).pipe(operators_1.switchMap((it) => ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this.transformation(it)))).pipe(operators_1.skip(0)); }
}
exports.FlatMappedObservableProperty = FlatMappedObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.flatMap>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyFlatMap(this_, transformation) {
    return new FlatMappedObservableProperty(this_, transformation);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyFlatMap = comLightningkiteKhrysalisObservablesObservablePropertyFlatMap;
//! Declares com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty
class MutableFlatMappedObservableProperty extends MutableObservableProperty_shared_1.MutableObservableProperty {
    constructor(basedOn, transformation) {
        super();
        this.basedOn = basedOn;
        this.transformation = transformation;
        this.lastProperty = null;
    }
    //! Declares com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.value
    get value() { return this.transformation(this.basedOn.value).value; }
    set value(value) {
        this.transformation(this.basedOn.value).value = value;
    }
    //! Declares com.lightningkite.khrysalis.observables.MutableFlatMappedObservableProperty.onChange
    get onChange() {
        return ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(this.basedOn).pipe(operators_1.switchMap((it) => {
            const prop = this.transformation(it);
            this.lastProperty = prop;
            return ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(prop);
        })).pipe(operators_1.skip(0));
    }
    update() {
        var _a;
        (_a = this.lastProperty) === null || _a === void 0 ? void 0 : _a.update();
    }
}
exports.MutableFlatMappedObservableProperty = MutableFlatMappedObservableProperty;
//! Declares com.lightningkite.khrysalis.observables.flatMapMutable>com.lightningkite.khrysalis.observables.ObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesObservablePropertyFlatMapMutable(this_, transformation) {
    return new MutableFlatMappedObservableProperty(this_, transformation);
}
exports.comLightningkiteKhrysalisObservablesObservablePropertyFlatMapMutable = comLightningkiteKhrysalisObservablesObservablePropertyFlatMapMutable;
//# sourceMappingURL=FlatMappedObservableProperty.shared.js.map