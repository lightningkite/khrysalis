"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/ProgressBar.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = require("../ObservableProperty.ext.shared");
const DisposeCondition_actual_1 = require("../../rx/DisposeCondition.actual");
//! Declares com.lightningkite.khrysalis.observables.binding.bindInt>android.widget.ProgressBar
function androidWidgetProgressBarBindInt(this_, observable) {
    this_.max = 100;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        this_.value = value;
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetProgressBarBindInt = androidWidgetProgressBarBindInt;
//! Declares com.lightningkite.khrysalis.observables.binding.bindFloat>android.widget.ProgressBar
function androidWidgetProgressBarBindFloat(this_, observable) {
    this_.max = 100;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => {
        this_.value = Math.floor((Math.min(Math.max(value, 0.0), 1.0) * 100));
    }), DisposeCondition_actual_1.getAndroidViewViewRemoved(this_));
}
exports.androidWidgetProgressBarBindFloat = androidWidgetProgressBarBindFloat;
