"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/ImageView.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
const ObservableProperty_ext_shared_1 = require("../ObservableProperty.ext.shared");
const DisposeCondition_actual_1 = require("../../rx/DisposeCondition.actual");
const ImageView_actual_1 = require("../../views/ImageView.actual");
const delay_actual_1 = require("../../delay.actual");
//! Declares com.lightningkite.khrysalis.observables.binding.bindImage
function xImageViewBindImage(this_, image) {
    delay_actual_1.post(() => {
        DisposeCondition_actual_1.xDisposableUntil(ObservableProperty_ext_shared_1.xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
            ImageView_actual_1.xImageViewLoadImage(this_, it);
        }), DisposeCondition_actual_1.xViewRemovedGet(this_));
    });
}
exports.xImageViewBindImage = xImageViewBindImage;
//! Declares com.lightningkite.khrysalis.observables.binding.bindVideoThumbnail
function xImageViewBindVideoThumbnail(this_, image) {
    delay_actual_1.post(() => {
        DisposeCondition_actual_1.xDisposableUntil(ObservableProperty_ext_shared_1.xObservablePropertySubscribeBy(image, undefined, undefined, (it) => {
            ImageView_actual_1.xImageViewLoadVideoThumbnail(this_, it);
        }), DisposeCondition_actual_1.xViewRemovedGet(this_));
    });
}
exports.xImageViewBindVideoThumbnail = xImageViewBindVideoThumbnail;
//# sourceMappingURL=ImageView.binding.actual.js.map