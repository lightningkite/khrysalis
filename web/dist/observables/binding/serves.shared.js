"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter
// File: observables/binding/serves.shared.kt
// Package: com.lightningkite.khrysalis.observables.binding
const DisposeCondition_actual_1 = require("../../rx/DisposeCondition.actual");
const ObservableProperty_ext_shared_1 = require("../ObservableProperty.ext.shared");
//! Declares com.lightningkite.khrysalis.observables.binding.serves>com.lightningkite.khrysalis.observables.MutableObservableProperty<kotlin.Any>
function comLightningkiteKhrysalisObservablesMutableObservablePropertyServes(this_, until, other) {
    let suppress = false;
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(ObservableProperty_ext_shared_1.getComLightningkiteKhrysalisObservablesObservablePropertyObservable(other).subscribe((value) => {
        if (!suppress) {
            suppress = true;
            this_.value = value;
            suppress = false;
        }
    }, undefined, undefined), until);
    DisposeCondition_actual_1.ioReactivexDisposablesDisposableUntil(this_.onChange.subscribe((value) => {
        if (!suppress) {
            suppress = true;
            other.value = value;
            suppress = false;
        }
    }, undefined, undefined), until);
}
exports.comLightningkiteKhrysalisObservablesMutableObservablePropertyServes = comLightningkiteKhrysalisObservablesMutableObservablePropertyServes;
//# sourceMappingURL=serves.shared.js.map