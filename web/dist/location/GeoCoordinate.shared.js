"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: location/GeoCoordinate.shared.kt
// Package: com.lightningkite.khrysalis.location
const Kotlin_1 = require("../Kotlin");
const jsonParsing_1 = require("../net/jsonParsing");
//! Declares com.lightningkite.khrysalis.location.GeoCoordinate
class GeoCoordinate {
    constructor(latitude, longitude) {
        this.latitude = latitude;
        this.longitude = longitude;
    }
    static fromJson(obj) {
        return new GeoCoordinate(jsonParsing_1.parse(obj["latitude"], [Number]), jsonParsing_1.parse(obj["longitude"], [Number]));
    }
    toJSON() {
        return {
            latitude: this.latitude,
            longitude: this.longitude
        };
    }
    hashCode() {
        let hash = 17;
        hash = 31 * hash + Kotlin_1.hashAnything(this.latitude);
        hash = 31 * hash + Kotlin_1.hashAnything(this.longitude);
        return hash;
    }
    equals(other) { return other instanceof GeoCoordinate && Kotlin_1.safeEq(this.latitude, other.latitude) && Kotlin_1.safeEq(this.longitude, other.longitude); }
    toString() { return `GeoCoordinate(latitude = ${this.latitude}, longitude = ${this.longitude})`; }
    copy(latitude = this.latitude, longitude = this.longitude) { return new GeoCoordinate(latitude, longitude); }
}
exports.GeoCoordinate = GeoCoordinate;
//# sourceMappingURL=GeoCoordinate.shared.js.map