"use strict";
// Generated by Khrysalis TypeScript converter
// File: views/CustomView.actual.kt
// Package: com.lightningkite.khrysalis.views
Object.defineProperty(exports, "__esModule", { value: true });
const DisplayMetrics_actual_1 = require("./DisplayMetrics.actual");
const customViewDelegateSymbol = Symbol("customViewDelegateSymbol");
function customViewSetDelegate(view, delegate) {
    delegate.customView = view;
    view.ontouchstart = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchDown(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    view.ontouchmove = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchMove(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    view.ontouchcancel = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchCancelled(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    view.ontouchend = (e) => {
        const b = view.getBoundingClientRect();
        const on = e.changedTouches;
        for (let i = 0; i < on.length; i++) {
            const t = on.item(i);
            delegate.onTouchUp(t.identifier, t.pageX - b.x, t.pageY - b.y, view.width, view.height);
        }
    };
    //TODO: Measure?
    delegate.draw(view.getContext("2d"), view.width, view.height, DisplayMetrics_actual_1.DisplayMetrics.INSTANCE);
    view[customViewDelegateSymbol] = delegate;
}
exports.customViewSetDelegate = customViewSetDelegate;
function customViewInvalidate(view) {
    var _a;
    (_a = view[customViewDelegateSymbol]) === null || _a === void 0 ? void 0 : _a.draw(view.getContext("2d"), view.width, view.height, DisplayMetrics_actual_1.DisplayMetrics.INSTANCE);
}
exports.customViewInvalidate = customViewInvalidate;
