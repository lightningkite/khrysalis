"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: time/TimeAlone.shared.kt
// Package: com.lightningkite.khrysalis.time
const Math_shared_1 = require("../Math.shared");
const Date_actual_1 = require("./Date.actual");
const ClockPartSize_shared_1 = require("./ClockPartSize.shared");
//! Declares com.lightningkite.khrysalis.time.normalize>com.lightningkite.khrysalis.time.TimeAlone
function xTimeAloneNormalize(this_) {
    this_.hour = Math_shared_1.xIntFloorMod((this_.hour + Math_shared_1.xIntFloorDiv(this_.minute, 60)), 24);
    this_.minute = Math_shared_1.xIntFloorMod((this_.minute + Math_shared_1.xIntFloorDiv(this_.second, 60)), 60);
    this_.second = Math_shared_1.xIntFloorMod(this_.second, 60);
}
exports.xTimeAloneNormalize = xTimeAloneNormalize;
//! Declares com.lightningkite.khrysalis.time.set>com.lightningkite.khrysalis.time.TimeAlone
function xTimeAloneSet(this_, other) {
    this_.hour = other.hour;
    this_.minute = other.minute;
    this_.second = other.second;
    return this_;
}
exports.xTimeAloneSet = xTimeAloneSet;
//! Declares com.lightningkite.khrysalis.time.format>com.lightningkite.khrysalis.time.TimeAlone
function xTimeAloneFormat(this_, clockPartSize) {
    return Date_actual_1.xDateFormat(Date_actual_1.dateFrom(Date_actual_1.xDateDateAloneGet(new Date()), this_, undefined), ClockPartSize_shared_1.ClockPartSize.None, clockPartSize);
}
exports.xTimeAloneFormat = xTimeAloneFormat;
//# sourceMappingURL=TimeAlone.shared.js.map