import { TimeAlone } from './TimeAlone.actual';
import { DateAlone } from './DateAlone.actual';
import { TimeInterval } from './TimeInterval.actual';
import { ClockPartSize } from './ClockPartSize.shared';
export declare function javaUtilDatePlus(this_: Date, interval: TimeInterval): Date;
export declare function javaUtilDateMinus(this_: Date, interval: TimeInterval): Date;
export declare function copyDateMod(on: Date, action: Function, ...params: Array<any>): Date;
export declare function dateMod(on: Date, action: Function, ...params: Array<any>): Date;
export declare function copyDateModRelative(on: Date, getter: () => number, action: Function, num: number): Date;
export declare function dateModRelative(on: Date, getter: () => number, action: Function, num: number): Date;
export declare function copyDateAloneMod(on: DateAlone, action: Function, ...params: Array<any>): DateAlone;
export declare function dateAloneMod(on: DateAlone, action: Function, ...params: Array<any>): DateAlone;
export declare function copyDateAloneModRelative(on: DateAlone, getter: () => number, action: Function, num: number): DateAlone;
export declare function dateAloneModRelative(on: DateAlone, getter: () => number, action: Function, num: number): DateAlone;
export declare function javaUtilDateSet(this_: Date, ...things: Array<any>): Date;
export declare function comLightningkiteKhrysalisTimeDateAloneSet(this_: DateAlone, date: Date): DateAlone;
export declare function comLightningkiteKhrysalisTimeTimeAloneSet(this_: TimeAlone, date: Date): TimeAlone;
export declare function getJavaUtilDateDateAlone(this_: Date): DateAlone;
export declare function getJavaUtilDateTimeAlone(this_: Date): TimeAlone;
export declare function dateFrom(dateAlone: DateAlone, timeAlone: TimeAlone, existing?: Date): Date;
export declare function dateFromIso(iso8601: string): (Date | null);
export declare function javaUtilDateFormat(this_: Date, dateStyle: ClockPartSize, timeStyle: ClockPartSize): string;
