// Generated by Khrysalis TypeScript converter
// File: delay.actual.kt
// Package: com.lightningkite.khrysalis
import { Subject } from 'rxjs'

//! Declares com.lightningkite.khrysalis.delay
export function delay(milliseconds: number, action: () => void) {
    if(milliseconds === 0){
        action();
    } else {
        setTimeout(action, milliseconds);
    }
}

//! Declares com.lightningkite.khrysalis.post
export function post(action: () => void) {
    setTimeout(action);
}

//! Declares com.lightningkite.khrysalis.animationFrame
export const _animationFrame: Subject<number> = new Subject();
let started = false;
export function getAnimationFrame(): Subject<number> {
    if(!started){
        started = true;
    }
    let currentTime = Date.now()
    setInterval(()=>{
        const now = Date.now()
        _animationFrame.next((now - currentTime) / 1000.0)
        currentTime = now
    }, 16)
    return _animationFrame;
}


