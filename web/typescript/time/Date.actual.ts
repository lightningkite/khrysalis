// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: time/Date.actual.kt
// Package: com.lightningkite.khrysalis.time
import { TimeAlone } from './TimeAlone.actual'
import { TimeInterval } from './TimeInterval.actual'
import { DateAlone } from './DateAlone.actual'
import { ClockPartSize } from './ClockPartSize.shared'

//! Declares com.lightningkite.khrysalis.time.calendarPool
export const _calendarPool = ConcurrentLinkedQueue.constructor<Calendar>();

//! Declares com.lightningkite.khrysalis.time.useCalendar
export function useCalendar<T>(action: (a: Calendar) => T): T{}

//! Declares com.lightningkite.khrysalis.time.datePool
export const _datePool = ConcurrentLinkedQueue.constructor<Date>();

//! Declares com.lightningkite.khrysalis.time.useDate
export function useDate<T>(action: (a: Date) => T): T{}


//! Declares com.lightningkite.khrysalis.time.plus
export function JavaUtilDatePlus(this_Plus: Date, interval: TimeInterval): Date{}


//! Declares com.lightningkite.khrysalis.time.minus
export function JavaUtilDateMinus(this_Minus: Date, interval: TimeInterval): Date{}


//! Declares com.lightningkite.khrysalis.time.dayOfWeek
export function getJavaUtilDateDayOfWeek(this_DayOfWeek: Date): number {}

//! Declares com.lightningkite.khrysalis.time.dayOfMonth
export function getJavaUtilDateDayOfMonth(this_DayOfMonth: Date): number {}

//! Declares com.lightningkite.khrysalis.time.monthOfYear
export function getJavaUtilDateMonthOfYear(this_MonthOfYear: Date): number {}

//! Declares com.lightningkite.khrysalis.time.yearAd
export function getJavaUtilDateYearAd(this_YearAd: Date): number {}

//! Declares com.lightningkite.khrysalis.time.hourOfDay
export function getJavaUtilDateHourOfDay(this_HourOfDay: Date): number {}

//! Declares com.lightningkite.khrysalis.time.minuteOfHour
export function getJavaUtilDateMinuteOfHour(this_MinuteOfHour: Date): number {}

//! Declares com.lightningkite.khrysalis.time.secondOfMinute
export function getJavaUtilDateSecondOfMinute(this_SecondOfMinute: Date): number {}


//! Declares com.lightningkite.khrysalis.time.dateAlone
export function getJavaUtilDateDateAlone(this_DateAlone: Date): DateAlone {}

//! Declares com.lightningkite.khrysalis.time.timeAlone
export function getJavaUtilDateTimeAlone(this_TimeAlone: Date): TimeAlone {}


//! Declares com.lightningkite.khrysalis.time.sameDay
export function JavaUtilDateSameDay(this_SameDay: Date, other: Date): Boolean{}

//! Declares com.lightningkite.khrysalis.time.sameMonth
export function JavaUtilDateSameMonth(this_SameMonth: Date, other: Date): Boolean{}

//! Declares com.lightningkite.khrysalis.time.sameYear
export function JavaUtilDateSameYear(this_SameYear: Date, other: Date): Boolean{}

//! Declares com.lightningkite.khrysalis.time.dayOfWeek
export function JavaUtilDateDayOfWeek(this_DayOfWeek1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.dayOfMonth
export function JavaUtilDateDayOfMonth(this_DayOfMonth1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.monthOfYear
export function JavaUtilDateMonthOfYear(this_MonthOfYear1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.yearAd
export function JavaUtilDateYearAd(this_YearAd1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.hourOfDay
export function JavaUtilDateHourOfDay(this_HourOfDay1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.minuteOfHour
export function JavaUtilDateMinuteOfHour(this_MinuteOfHour1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.secondOfMinute
export function JavaUtilDateSecondOfMinute(this_SecondOfMinute1: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addDayOfWeek
export function JavaUtilDateAddDayOfWeek(this_AddDayOfWeek: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addDayOfMonth
export function JavaUtilDateAddDayOfMonth(this_AddDayOfMonth: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addMonthOfYear
export function JavaUtilDateAddMonthOfYear(this_AddMonthOfYear: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addYearAd
export function JavaUtilDateAddYearAd(this_AddYearAd: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addHourOfDay
export function JavaUtilDateAddHourOfDay(this_AddHourOfDay: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addMinuteOfHour
export function JavaUtilDateAddMinuteOfHour(this_AddMinuteOfHour: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.addSecondOfMinute
export function JavaUtilDateAddSecondOfMinute(this_AddSecondOfMinute: Date, value: number, existing: Date = Date.constructor()){}

//! Declares com.lightningkite.khrysalis.time.setDayOfWeek
export function JavaUtilDateSetDayOfWeek(this_SetDayOfWeek: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setDayOfMonth
export function JavaUtilDateSetDayOfMonth(this_SetDayOfMonth: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setMonthOfYear
export function JavaUtilDateSetMonthOfYear(this_SetMonthOfYear: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setYearAd
export function JavaUtilDateSetYearAd(this_SetYearAd: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setHourOfDay
export function JavaUtilDateSetHourOfDay(this_SetHourOfDay: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setMinuteOfHour
export function JavaUtilDateSetMinuteOfHour(this_SetMinuteOfHour: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setSecondOfMinute
export function JavaUtilDateSetSecondOfMinute(this_SetSecondOfMinute: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddDayOfWeek
export function JavaUtilDateSetAddDayOfWeek(this_SetAddDayOfWeek: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddDayOfMonth
export function JavaUtilDateSetAddDayOfMonth(this_SetAddDayOfMonth: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddMonthOfYear
export function JavaUtilDateSetAddMonthOfYear(this_SetAddMonthOfYear: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddYearAd
export function JavaUtilDateSetAddYearAd(this_SetAddYearAd: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddHourOfDay
export function JavaUtilDateSetAddHourOfDay(this_SetAddHourOfDay: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddMinuteOfHour
export function JavaUtilDateSetAddMinuteOfHour(this_SetAddMinuteOfHour: Date, value: number){}
//! Declares com.lightningkite.khrysalis.time.setAddSecondOfMinute
export function JavaUtilDateSetAddSecondOfMinute(this_SetAddSecondOfMinute: Date, value: number){}

//! Declares com.lightningkite.khrysalis.time.set
export function JavaUtilDateSet(this_Set: Date, dateAlone: DateAlone): Date{}

//! Declares com.lightningkite.khrysalis.time.set
export function JavaUtilDateSet(this_Set: Date, timeAlone: TimeAlone): Date{}

//! Declares com.lightningkite.khrysalis.time.set
export function JavaUtilDateSet(this_Set: Date, dateAlone: DateAlone, timeAlone: TimeAlone): Date{}

//! Declares com.lightningkite.khrysalis.time.set
export function ComLightningkiteKhrysalisTimeDateAloneSet(this_Set: DateAlone, date: Date): DateAlone{}

//! Declares com.lightningkite.khrysalis.time.set
export function ComLightningkiteKhrysalisTimeTimeAloneSet(this_Set: TimeAlone, date: Date): TimeAlone{}

//! Declares com.lightningkite.khrysalis.time.dateFrom
export function dateFrom(dateAlone: DateAlone, timeAlone: TimeAlone, existing: Date = Date.constructor()): Date{}

//! Declares com.lightningkite.khrysalis.time.dateFromIso
export function dateFromIso(iso8601: string): (Date | null){}

//! Declares com.lightningkite.khrysalis.time.format
export function JavaUtilDateFormat(this_Format: Date, dateStyle: ClockPartSize, timeStyle: ClockPartSize): string{}

//! Declares com.lightningkite.khrysalis.time.iso8601
export function JavaUtilDateIso8601(this_Iso8601: Date): string{}

