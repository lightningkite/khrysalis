// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: SecurePreferences.actual.kt
// Package: com.lightningkite.khrysalis
// FQImport: com.lightningkite.khrysalis.SecurePreferences.set.T TS T
// FQImport: com.lightningkite.khrysalis.SecurePreferences.set.value TS value
// FQImport: android.content.SharedPreferences.Editor.clear TS clear
// FQImport: com.lightningkite.khrysalis.SecurePreferences.get.T TS T
// FQImport: com.lightningkite.khrysalis.SecurePreferences.get.key TS key
// FQImport: android.content.SharedPreferences TS SharedPreferences
// FQImport: com.lightningkite.khrysalis.Preferences.sharedPreferences TS sharedPreferences
// FQImport: android.content.SharedPreferences.Editor.putString TS putString
// FQImport: android.content.SharedPreferences.Editor.remove TS remove
// FQImport: android.content.SharedPreferences.Editor.apply TS apply
// FQImport: com.lightningkite.khrysalis.SecurePreferences.sharedPreferences TS sharedPreferences
// FQImport: com.lightningkite.khrysalis.SecurePreferences.get.raw TS raw
// FQImport: com.lightningkite.khrysalis.SecurePreferences.get.result TS result
// FQImport: android.content.SharedPreferences.edit TS edit
// FQImport: com.lightningkite.khrysalis.toJsonString TS kotlinAnyToJsonString
// FQImport: com.lightningkite.khrysalis.SecurePreferences.remove.key TS key
// FQImport: com.lightningkite.khrysalis.IsCodable TS IsCodable
// FQImport: android.content.SharedPreferences.getString TS getString
// FQImport: com.lightningkite.khrysalis.fromJsonString TS kotlinStringFromJsonString
// FQImport: com.lightningkite.khrysalis.SecurePreferences.set.key TS key
import { IsCodable, kotlinAnyToJsonString, kotlinStringFromJsonString } from './Codable.actual'

//! Declares com.lightningkite.khrysalis.SecurePreferences
export class SecurePreferences {
    private constructor() {
    }
    public static INSTANCE = new SecurePreferences();
    
    
    //! Declares com.lightningkite.khrysalis.SecurePreferences.sharedPreferences
    public get sharedPreferences(): SharedPreferences { return Preferences.INSTANCE.sharedPreferences; }
    
    
    set<T>(key: string, value: T){
        sharedPreferences.edit().putString(key, kotlinAnyToJsonString(value)).apply();
    }
    
    remove(key: string){
        sharedPreferences.edit().remove(key).apply();
    }
    
    get<T extends IsCodable>(key: string): (T | null){
        const raw = sharedPreferences.getString(key, null);
        
        const result = raw?.kotlinStringFromJsonString<T>();
        
        return result;
    }
    
    clear(){
        sharedPreferences.edit().clear().apply();
    }
}

