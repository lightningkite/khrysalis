// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: Random.actual.kt
// Package: com.lightningkite.khrysalis

//! Declares com.lightningkite.khrysalis.nextFloat
export function KotlinRandomRandomNextFloat(this_NextFloat: Random, until: number): number{}
//! Declares com.lightningkite.khrysalis.nextFloat
export function KotlinRandomRandomNextFloat(this_NextFloat: Random, from: number, until: number): number{}

/* SHARED DECLARATIONS
class Random(seed: Long) {
    companion object {
        val Default: Random
    }
    fun nextInt(): Int
    fun nextInt(until: Int): Int
    fun nextInt(from: Int, until: Int): Int
    fun nextLong(): Long
    fun nextLong(until: Long): Long
    fun nextLong(from: Long, until: Long): Long
    fun nextBoolean(): Boolean
    fun nextDouble(): Double
    fun nextDouble(until: Double): Double
    fun nextDouble(from: Double, until: Double): Double
    fun nextFloat(): Float
    fun nextFloat(until: Float): Float
    fun nextFloat(from: Float, until: Float): Float
}

*/

