// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: Math.shared.kt
// Package: com.lightningkite.khrysalis
// FQImport: com.lightningkite.khrysalis.floorMod.other TS other
// FQImport: com.lightningkite.khrysalis.floorDiv.other TS other

//! Declares com.lightningkite.khrysalis.floorMod
export function kotlinIntFloorMod(this_FloorMod: number, other: number): number{ return (this_FloorMod % other + other) % other; }
//! Declares com.lightningkite.khrysalis.floorDiv
export function kotlinIntFloorDiv(this_FloorDiv: number, other: number): number{
    (() => {if(this_FloorDiv < 0){
                return this_FloorDiv / other - 1;
            } else {
                return this_FloorDiv / other;
    }})()
}

//! Declares com.lightningkite.khrysalis.floorMod
export function kotlinFloatFloorMod(this_FloorMod: number, other: number): number{ return (this_FloorMod % other + other) % other; }
//! Declares com.lightningkite.khrysalis.floorDiv
export function kotlinFloatFloorDiv(this_FloorDiv: number, other: number): number{
    (() => {if(this_FloorDiv < 0){
                return this_FloorDiv / other - 1;
            } else {
                return this_FloorDiv / other;
    }})()
}


//! Declares com.lightningkite.khrysalis.floorMod
export function kotlinDoubleFloorMod(this_FloorMod: number, other: number): number{ return (this_FloorMod % other + other) % other; }
//! Declares com.lightningkite.khrysalis.floorDiv
export function kotlinDoubleFloorDiv(this_FloorDiv: number, other: number): number{
    (() => {if(this_FloorDiv < 0){
                return this_FloorDiv / other - 1;
            } else {
                return this_FloorDiv / other;
    }})()
}

