// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/ConstantObservableProperty.shared.kt
// Package: com.lightningkite.khrysalis.observables
// FQImport: io.reactivex.Observable.never TS never
// FQImport: com.lightningkite.khrysalis.observables.ConstantObservableProperty.underlyingValue TS underlyingValue
// FQImport: com.lightningkite.khrysalis.observables.ConstantObservableProperty.T TS T
// FQImport: com.lightningkite.khrysalis.observables.ObservableProperty TS ObservableProperty
// FQImport: io.reactivex.Observable TS Observable
// FQImport: com.lightningkite.khrysalis.Box TS Box
import { ObservableProperty } from './ObservableProperty.shared'
import { Observable } from 'rxjs'

//! Declares com.lightningkite.khrysalis.observables.ConstantObservableProperty
export class ConstantObservableProperty<T> extends ObservableProperty<any> {
    public readonly underlyingValue: T;
    public constructor( underlyingValue: T) {
        super();
        this.underlyingValue = underlyingValue;
        this.onChange = Observable.never();
    }
    
    public readonly onChange: Observable<Box<T>> = Observable.never();
    
    //! Declares com.lightningkite.khrysalis.observables.ConstantObservableProperty.value
    public get value(): T { return this.underlyingValue; }
    
}

