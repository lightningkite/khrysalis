// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/binding/SeekBar.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
// FQImport: kotlin.Boolean TS Boolean
// FQImport: com.lightningkite.khrysalis.rx.until TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: max TS setAndroidWidgetSeekBarMax
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.endInclusive TS endInclusive
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<anonymous>.value TS value
// FQImport: android.widget.SeekBar.OnSeekBarChangeListener TS SeekBarOnSeekBarChangeListener
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.start TS start
// FQImport: android.widget.SeekBar.incrementProgressBy TS incrementProgressBy
// FQImport: android.widget.SeekBar TS SeekBar
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.suppress TS suppress
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.onProgressChanged.p1 TS p1
// FQImport: android.widget.SeekBar.setOnSeekBarChangeListener TS setOnSeekBarChangeListener
// FQImport: com.lightningkite.khrysalis.rx.removed TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.observable TS observable
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: progress TS setAndroidWidgetSeekBarProgress
import { comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy } from './../ObservableProperty.ext.shared'
import { MutableObservableProperty } from './../MutableObservableProperty.shared'
import { getAndroidViewViewRemoved, ioReactivexDisposablesDisposableUntil } from './../../rx/DisposeCondition.actual'

//! Declares com.lightningkite.khrysalis.observables.binding.bind
export function androidWidgetSeekBarBind(this_Bind: SeekBar, start: number, endInclusive: number, observable: MutableObservableProperty<number>){
    setAndroidWidgetSeekBarMax(this_Bind, endInclusive - start);
    this_Bind.incrementProgressBy(1);
    
    let suppress = false;
    
    ioReactivexDisposablesDisposableUntil(comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(observable, undefined, undefined, (value) => (() => {if (suppress.not()) {
                        suppress = true;
                        setAndroidWidgetSeekBarProgress(this_Bind, value + start);
                        suppress = false;
    }})()), getAndroidViewViewRemoved(this_Bind));
    this_Bind.setOnSeekBarChangeListener(new class Anon implements SeekBarOnSeekBarChangeListener {
            public static implementsInterfaceAndroidWidgetSeekBarOnSeekBarChangeListener = true;
            public constructor() {
            }
            
            onProgressChanged(p0: (SeekBar | null), p1: number, p2: Boolean){
                (() => {if (suppress.not()) {
                            suppress = true;
                            observable.value = p1 + start;
                            suppress = false;
                }})()
            }
            
            onStartTrackingTouch(p0: (SeekBar | null)){
            }
            
            onStopTrackingTouch(p0: (SeekBar | null)){
            }
    }());
    
}

