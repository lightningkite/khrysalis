// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/binding/TabLayout.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.tabs TS tabs
// FQImport: com.lightningkite.khrysalis.rx.until TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: com.google.android.material.tabs.TabLayout.newTab TS newTab
// FQImport: com.google.android.material.tabs.TabLayout.addTab TS addTab
// FQImport: com.google.android.material.tabs.TabLayout.getTabAt TS getTabAt
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<anonymous>.value TS value
// FQImport: com.google.android.material.tabs.TabLayout.addOnTabSelectedListener TS addOnTabSelectedListener
// FQImport: com.google.android.material.tabs.TabLayout.Tab TS Tab
// FQImport: com.google.android.material.tabs.TabLayout TS TabLayout
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.tab TS tab
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.selected TS selected
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: com.google.android.material.tabs.TabLayout.Tab.select TS select
// FQImport: com.lightningkite.khrysalis.rx.removed TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.onTabReselected.p0 TS p0
// FQImport: com.google.android.material.tabs.TabLayout.Tab.setText TS setText
// FQImport: com.google.android.material.tabs.TabLayout.BaseOnTabSelectedListener TS TabLayoutBaseOnTabSelectedListener
// FQImport: position TS getComGoogleAndroidMaterialTabsTabLayoutTabPosition
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.onTabSelected.p0 TS p0
import { comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy } from './../ObservableProperty.ext.shared'
import { MutableObservableProperty } from './../MutableObservableProperty.shared'
import { getAndroidViewViewRemoved, ioReactivexDisposablesDisposableUntil } from './../../rx/DisposeCondition.actual'

//! Declares com.lightningkite.khrysalis.observables.binding.bind
export function comGoogleAndroidMaterialTabsTabLayoutBind(this_: TabLayout, tabs: Array<string>, selected: MutableObservableProperty<number>): void{
    for (const tab of tabs) {
        this_.addTab(this_.newTab().setText(tab));
    }
    ioReactivexDisposablesDisposableUntil(comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(selected, undefined, undefined, (value) => {
                this_.getTabAt(value)?.select()
    }), getAndroidViewViewRemoved(this_));
    this_.addOnTabSelectedListener(new class Anon implements TabLayoutBaseOnTabSelectedListener<TabLayout.Tab> {
            public static implementsInterfaceComGoogleAndroidMaterialTabsTabLayoutBaseOnTabSelectedListener = true;
            public constructor() {
            }
            
            onTabReselected(p0: TabLayout.Tab): void{
                if (!(selected.value === getComGoogleAndroidMaterialTabsTabLayoutTabPosition(p0))) selected.value = getComGoogleAndroidMaterialTabsTabLayoutTabPosition(p0);
            }
            
            onTabUnselected(p0: TabLayout.Tab): void{}
            
            onTabSelected(p0: TabLayout.Tab): void{
                if (!(selected.value === getComGoogleAndroidMaterialTabsTabLayoutTabPosition(p0))) selected.value = getComGoogleAndroidMaterialTabsTabLayoutTabPosition(p0);
            }
    }());
}

