// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: observables/binding/ViewPager.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
// FQImport: kotlin.Boolean TS Boolean
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.isViewFromObject.p0 TS p0
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.instantiateItem.view TS view
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.destroyItem.container TS container
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.destroyItem.object TS object
// FQImport: currentItem TS setAndroidxViewpagerWidgetViewPagerCurrentItem
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty.value TS value
// FQImport: android.view.ViewGroup.addView TS addView
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.instantiateItem.container TS container
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.instantiateItem.position TS position
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.instantiateItem.data TS data
// FQImport: com.lightningkite.khrysalis.observables.subscribeBy TS comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy
// FQImport: android.view.ViewGroup TS ViewGroup
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.items TS items
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.T TS T
// FQImport: com.lightningkite.khrysalis.rx.until TS ioReactivexDisposablesDisposableUntil
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.isViewFromObject.p1 TS p1
// FQImport: adapter TS setAndroidxViewpagerWidgetViewPagerAdapter
// FQImport: androidx.viewpager.widget.PagerAdapter TS PagerAdapter
// FQImport: androidx.viewpager.widget.ViewPager TS ViewPager
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.showIndex TS showIndex
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<anonymous>.value TS value
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.makeView TS makeView
// FQImport: androidx.viewpager.widget.ViewPager.OnPageChangeListener TS ViewPagerOnPageChangeListener
// FQImport: androidx.viewpager.widget.ViewPager.addOnPageChangeListener TS addOnPageChangeListener
// FQImport: com.lightningkite.khrysalis.observables.StandardObservableProperty TS StandardObservableProperty
// FQImport: com.lightningkite.khrysalis.rx.removed TS getAndroidViewViewRemoved
// FQImport: com.lightningkite.khrysalis.observables.MutableObservableProperty TS MutableObservableProperty
// FQImport: android.view.ViewGroup.removeView TS removeView
// FQImport: com.lightningkite.khrysalis.observables.binding.bind.<no name provided>.onPageSelected.p0 TS p0
import { comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy } from './../ObservableProperty.ext.shared'
import { MutableObservableProperty } from './../MutableObservableProperty.shared'
import { getAndroidViewViewRemoved, ioReactivexDisposablesDisposableUntil } from './../../rx/DisposeCondition.actual'
import { StandardObservableProperty } from './../StandardObservableProperty.shared'

//! Declares com.lightningkite.khrysalis.observables.binding.bind
export function androidxViewpagerWidgetViewPagerBind<T>(this_: ViewPager, items: Array<T>, showIndex: MutableObservableProperty<number> = new StandardObservableProperty(0, undefined), makeView: (a: T) => HTMLElement): void{
    setAndroidxViewpagerWidgetViewPagerAdapter(this_, new class Anon extends PagerAdapter {
            public constructor() {
                super();
            }
            
            
            isViewFromObject(p0: HTMLElement, p1: any): Boolean{ return p1.equals(p0); }
            
            getCount(): number{ return items.length; }
            
            instantiateItem(container: ViewGroup, position: number): any{
                const data = items[position];
                
                const view = makeView(data);
                
                container.addView(view);
                return view;
            }
            
            destroyItem(container: ViewGroup, position: number, `object`: any): void{
                container.removeView(`object` as HTMLElement);
            }
    }());
    
    ioReactivexDisposablesDisposableUntil(comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy(showIndex, undefined, undefined, (value) => {
                setAndroidxViewpagerWidgetViewPagerCurrentItem(this_, value)
    }), getAndroidViewViewRemoved(this_));
    this_.addOnPageChangeListener(new class Anon implements ViewPagerOnPageChangeListener {
            public static implementsInterfaceAndroidxViewpagerWidgetViewPagerOnPageChangeListener = true;
            public constructor() {
            }
            
            onPageScrollStateChanged(p0: number): void{}
            onPageScrolled(p0: number, p1: number, p2: number): void{}
            onPageSelected(p0: number): void{
                showIndex.value = p0;
            }
    }());
}

