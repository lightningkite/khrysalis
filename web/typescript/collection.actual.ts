// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: collection.actual.kt
// Package: com.lightningkite.khrysalis
import { Comparable } from 'khrysalis/dist/Kotlin'

//! Declares com.lightningkite.khrysalis.withoutIndex
export function KotlinCollectionsListWithoutIndex<T>(this_WithoutIndex: Array<T>, index: number): Array<T>{}

//! Declares com.lightningkite.khrysalis.sumByLong
export function KotlinCollectionsIterableSumByLong<T>(this_SumByLong: Iterable<T>, selector: (a: T) => number): number{}

//! Declares com.lightningkite.khrysalis.binaryInsertBy
export function KotlinCollectionsMutableListBinaryInsertBy<T, K extends Comparable<K>>(this_BinaryInsertBy: Array<T>, item: T, crossinline selector: (a: T) => (K | null)){}

//! Declares com.lightningkite.khrysalis.binaryInsertByDistinct
export function KotlinCollectionsMutableListBinaryInsertByDistinct<T, K extends Comparable<K>>(this_BinaryInsertByDistinct: Array<T>, item: T, crossinline selector: (a: T) => (K | null)): Boolean{}


//! Declares com.lightningkite.khrysalis.binaryFind
export function KotlinCollectionsListBinaryFind<T, K extends Comparable<K>>(this_BinaryFind: Array<T>, key: K, crossinline selector: (a: T) => (K | null)): (T | null){}


//! Declares com.lightningkite.khrysalis.binaryForEach
export function KotlinCollectionsListBinaryForEach<T, K extends Comparable<K>>(this_BinaryForEach: Array<T>, lower: K, upper: K, crossinline selector: (a: T) => (K | null), action: (a: T) => void){}

