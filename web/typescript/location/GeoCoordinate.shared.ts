// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: location/GeoCoordinate.shared.kt
// Package: com.lightningkite.khrysalis.location
// FQImport: com.lightningkite.khrysalis.Codable TS Codable
import { Codable } from './../Codable.actual'

//! Declares com.lightningkite.khrysalis.location.GeoCoordinate
export class GeoCoordinate implements Codable {
    public static implementsInterfaceComLightningkiteKhrysalisCodable = true;
    public readonly latitude: number;
    public readonly longitude: number;
    public constructor( latitude: number,  longitude: number) {
        this.latitude = latitude;
        this.longitude = longitude;
    }
    public hashCode(): number {
        let hash = 17;
        hash = 31 * hash + Math.floor(this.latitude);
        hash = 31 * hash + Math.floor(this.longitude);
        return hash;
    }
    public equals(other: any): boolean { return other instanceof GeoCoordinate && this.latitude === other.latitude && this.longitude === other.longitude }
    public toString(): string { return `GeoCoordinate(latitude = ${this.latitude}, longitude = ${this.longitude})` }
    public copy(latitude: number = this.latitude, longitude: number = this.longitude) { return new GeoCoordinate(latitude, longitude); }
}

