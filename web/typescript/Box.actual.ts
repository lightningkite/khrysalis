// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: Box.actual.kt
// Package: com.lightningkite.khrysalis
import { Box } from './Box.actual'

//! Declares com.lightningkite.khrysalis.Box
export class Box<T> {
    public readonly valueRaw: (any | null);
    public constructor( valueRaw: (any | null)) {
        this.valueRaw = valueRaw;
    }
    
    //! Declares com.lightningkite.khrysalis.Box.value
    public get value(): T { return (() => {if(this.valueRaw.equals(Box.Companion.INSTANCE.NullRep)) {
                    return null as T
                }
                else {
                    return this.valueRaw as T
                }
    })(); }{}
    
    public static Companion = class Companion {
        private constructor() {
            this.NullRep = new class Anon {
                public constructor() {
                }
            }();
            this.NullRepBox = new Box<(any | null)>(Box.Companion.INSTANCE.NullRep);
        }
        public static INSTANCE = new Companion();
        
        private readonly NullRep = new class Anon {
            public constructor() {
            }
        }();
        
        private readonly NullRepBox = new Box<(any | null)>(Box.Companion.INSTANCE.NullRep);
        
        public wrap<T>(value: T): Box<T>{}
    }
}

//! Declares com.lightningkite.khrysalis.boxWrap
export function boxWrap<T>(value: T): Box<T>{}

