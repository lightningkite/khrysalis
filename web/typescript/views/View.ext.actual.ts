// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/View.ext.actual.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: android.view.View TS View
// FQImport: com.lightningkite.khrysalis.views.onClick.disabledMilliseconds TS disabledMilliseconds
// FQImport: com.lightningkite.khrysalis.views.onClick SKIPPED due to same file
// FQImport: android.graphics.drawable.Drawable TS Drawable
// FQImport: com.lightningkite.khrysalis.views.<set-backgroundDrawable>.value TS value
// FQImport: com.lightningkite.khrysalis.views.setBackgroundColorResource.color TS color
// FQImport: java.lang.System TS System
// FQImport: java.lang.System.currentTimeMillis TS currentTimeMillis
// FQImport: com.lightningkite.khrysalis.views.onClick.lastActivated TS lastActivated
// FQImport: android.view.View.setOnLongClickListener TS setOnLongClickListener
// FQImport: com.lightningkite.khrysalis.views.onLongClick.action TS action
// FQImport: android.view.View.setOnClickListener TS setOnClickListener
// FQImport: com.lightningkite.khrysalis.views.ColorResource TS ColorResource
// FQImport: android.view.View.setBackgroundResource TS setBackgroundResource
// FQImport: background TS getAndroidViewViewBackground
// FQImport: background TS setAndroidViewViewBackground
// FQImport: com.lightningkite.khrysalis.views.onClick.action TS action
// FQImport: com.lightningkite.khrysalis.views.<set-backgroundResource>.value TS value
// FQImport: com.lightningkite.khrysalis.views.onClick TS androidViewViewOnClick
import { ColorResource } from './ResourceTypes.actual'

//! Declares com.lightningkite.khrysalis.views.backgroundDrawable
export function getAndroidViewViewBackgroundDrawable(this_: View): (Drawable | null) { return getAndroidViewViewBackground(this_); }
export function setAndroidViewViewBackgroundDrawable(this_: View, value: (Drawable | null)) {
    setAndroidViewViewBackground(this_, value);
}


//! Declares com.lightningkite.khrysalis.views.backgroundResource
export function getAndroidViewViewBackgroundResource(this_: View): number { return 0; }
export function setAndroidViewViewBackgroundResource(this_: View, value: number) {
    this_.setBackgroundResource(value);
}



//! Declares com.lightningkite.khrysalis.views.onClick
export function androidViewViewOnClick(this_: View, action: () => void){
    androidViewViewOnClick(500, action);
}

//! Declares com.lightningkite.khrysalis.views.onClick
export function androidViewViewOnClick(this_: View, disabledMilliseconds: number, action: () => void){
    let lastActivated = System.currentTimeMillis();
    
    this_.setOnClickListener((it) => if(System.currentTimeMillis() - lastActivated > disabledMilliseconds) {
            this.action();
            lastActivated = System.currentTimeMillis();
    });
}

//! Declares com.lightningkite.khrysalis.views.onLongClick
export function androidViewViewOnLongClick(this_: View, action: () => void){
    this_.setOnLongClickListener((it) => {
            this.action();; return true;
    });
}


//! Declares com.lightningkite.khrysalis.views.setBackgroundColorResource
export function androidViewViewSetBackgroundColorResource(this_: View, color: ColorResource){
    this_.setBackgroundResource(color);
}

