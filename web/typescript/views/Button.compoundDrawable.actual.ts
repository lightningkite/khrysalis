// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: views/Button.compoundDrawable.actual.kt
// Package: com.lightningkite.khrysalis.views
// FQImport: kotlin.collections.asSequence TS kotlinArrayAsSequence
// FQImport: kotlin.sequences.filterNotNull TS kotlinSequencesSequenceFilterNotNull
// FQImport: com.lightningkite.khrysalis.views.<set-compoundDrawable>.existing TS existing
// FQImport: kotlin.sequences.firstOrNull TS kotlinSequencesSequenceFirstOrNull
// FQImport: compoundDrawables TS getAndroidWidgetButtonCompoundDrawables
// FQImport: android.graphics.drawable.Drawable TS Drawable
// FQImport: com.lightningkite.khrysalis.views.<set-compoundDrawable>.value TS value
// FQImport: android.widget.Button TS Button
// FQImport: android.widget.Button.setCompoundDrawablesWithIntrinsicBounds TS setCompoundDrawablesWithIntrinsicBounds

//! Declares com.lightningkite.khrysalis.views.compoundDrawable
export function getAndroidWidgetButtonCompoundDrawable(this_CompoundDrawable: Button): (Drawable | null) { return kotlinSequencesSequenceFirstOrNull(kotlinSequencesSequenceFilterNotNull(kotlinArrayAsSequence(getAndroidWidgetButtonCompoundDrawables(this_CompoundDrawable)))); }
export function setAndroidWidgetButtonCompoundDrawable(this_CompoundDrawable: Button, value: (Drawable | null)) {
    const existing = getAndroidWidgetButtonCompoundDrawables(this_CompoundDrawable);
    
    setCompoundDrawablesWithIntrinsicBounds(!(existing.get(0).equals(null)) ? value : null, !(existing.get(1).equals(null)) ? value : null, !(existing.get(2).equals(null)) ? value : null, !(existing.get(3).equals(null)) ? value : null);
}


