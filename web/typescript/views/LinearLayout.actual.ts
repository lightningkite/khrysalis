// Generated by Khrysalis TypeScript converter
// File: views/LinearLayout.actual.kt
// Package: com.lightningkite.khrysalis.views
import {Align, AlignPair} from './geometry/Align.shared'
import {also} from 'Kotlin'

//! Declares com.lightningkite.khrysalis.views.params>android.widget.LinearLayout
export function androidWidgetLinearLayoutParams(
    this_: HTMLDivElement,
    sizeX: number = 0,
    sizeY: number = 0,
    marginStart: number = 0,
    marginEnd: number = 0,
    marginTop: number = 0,
    marginBottom: number = 0,
    gravity: AlignPair = AlignPair.Companion.INSTANCE.center,
    weight: number = 0
): (v: HTMLElement) => HTMLElement {
    return (v) => {
        if(sizeX != 0){
            v.style.width = `${sizeX}px`;
        }
        if(sizeY != 0){
            v.style.height = `${sizeY}px`;
        }
        if(marginStart != 0){
            v.style.marginLeft = `${marginStart}px`;
        }
        if(marginEnd != 0){
            v.style.marginRight = `${marginEnd}px`;
        }
        if(marginTop != 0){
            v.style.marginTop = `${marginTop}px`;
        }
        if(marginBottom != 0){
            v.style.marginBottom = `${marginBottom}px`;
        }
        let alignSelf = Align.center;
        switch(this_.style.flexDirection) {
            case "row":
                alignSelf = gravity.vertical
                break;
            case "column":
                alignSelf = gravity.horizontal
                break;
        }
        switch(alignSelf){
            case Align.start:
                v.style.alignSelf = "flex-start";
                break;
            case Align.end:
                v.style.alignSelf = "flex-end";
                break;
            case Align.center:
                v.style.alignSelf = "center";
                break;
            case Align.fill:
                v.style.alignSelf = "stretch";
                break;
        }
        v.style.flexShrink = weight.toString();
        v.style.flexGrow = weight.toString();
        return v;
    };
}