---

## Types
- id: kotlin.collections.Set
  type: type
  template: Set<~T0~>
- id: kotlin.collections.MutableSet
  type: type
  template: Set<~T0~>
- id: kotlin.collections.HashSet
  type: type
  template: Set<~T0~>
- id: java.util.HashSet
  type: type
  template: Set<~T0~>

## Creation
- id: kotlin.collections.HashSet
  type: call
  hasExplicitTypeArguments: true
  typeArgumentRequirements:
    0: primitive
  template: new Set<~T0~>()

- id: java.util.HashSet
  type: call
  hasExplicitTypeArguments: true
  typeArgumentRequirements:
    0: primitive
  template: new Set<~T0~>()

- id: kotlin.collections.HashSet
  type: call
  hasExplicitTypeArguments: true
  template:
    pattern: "new EqualOverrideSet<~T0~>()"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: java.util.HashSet
  type: call
  hasExplicitTypeArguments: true
  template:
    pattern: "new EqualOverrideSet<~T0~>()"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.HashSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template: new Set()

- id: java.util.HashSet
  type: call
  typeArgumentRequirements:
    0: primitive
  template: new Set()

- id: kotlin.collections.HashSet
  type: call
  template:
    pattern: "new EqualOverrideSet()"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.setOf
  type: call
  typeArgumentRequirements:
    0: primitive
  hasExplicitTypeArguments: true
  template: "new Set<~T0~>([~*~])"

- id: kotlin.collections.setOf
  type: call
  typeArgumentRequirements:
    0: primitive
  template: "new Set([~*~])"

- id: kotlin.collections.setOf
  type: call
  hasExplicitTypeArguments: true
  template:
    pattern: "new EqualOverrideSet<~T0~>([~*~])"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections
- id: kotlin.collections.setOf
  type: call
  template:
    pattern: "new EqualOverrideSet([~*~])"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.mutableSetOf
  type: call
  typeArgumentRequirements:
    0: primitive
  hasExplicitTypeArguments: true
  template: "new Set<~T0~>([~*~])"
- id: kotlin.collections.mutableSetOf
  type: call
  typeArgumentRequirements:
    0: primitive
  template: "new Set([~*~])"

- id: kotlin.collections.mutableSetOf
  type: call
  hasExplicitTypeArguments: true
  template:
    pattern: "new EqualOverrideSet<~T0~>([~*~])"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections
- id: kotlin.collections.mutableSetOf
  type: call
  template:
    pattern: "new EqualOverrideSet([~*~])"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.hashSetOf
  type: call
  typeArgumentRequirements:
    0: primitive
  hasExplicitTypeArguments: true
  template: "new Set<~T0~>([~*~])"
- id: kotlin.collections.hashSetOf
  type: call
  typeArgumentRequirements:
    0: primitive
  template: "new Set([~*~])"

- id: kotlin.collections.hashSetOf
  type: call
  hasExplicitTypeArguments: true
  template:
    pattern: "new EqualOverrideSet<~T0~>([~*~])"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections
- id: kotlin.collections.hashSetOf
  type: call
  template:
    pattern: "new EqualOverrideSet([~*~])"
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

## Operations

- id: kotlin.collections.Set.contains
  type: call
  template: ~this~.has(~0~)

- id: java.util.HashSet.contains
  type: call
  template: ~this~.has(~0~)

- id: kotlin.collections.MutableSet.add
  type: call
  template:
    pattern: setAddCausedChange(~this~, ~0~)
    imports:
      setAddCausedChange: khrysalis/dist/KotlinCollections

- id: kotlin.collections.MutableSet.add
  type: call
  usedAsExpression: false
  template: ~this~.add(~0~)

- id: kotlin.collections.MutableSet.remove
  type: call
  template: ~this~.delete(~0~)

- id: java.util.HashSet.add
  type: call
  template:
    pattern: setAddCausedChange(~this~, ~0~)
    imports:
      setAddCausedChange: khrysalis/dist/KotlinCollections

- id: java.util.HashSet.add
  type: call
  usedAsExpression: false
  template: ~this~.add(~0~)

- id: java.util.HashSet.remove
  type: call
  template: ~this~.delete(~0~)

- id: kotlin.collections.plus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.collections.Set]
  template:
    pattern: new EqualOverrideSet([...~this~, ...~0~])
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.plus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.Any]
  template:
    pattern: new EqualOverrideSet([...~this~, ~0~])
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.minus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.collections.Set]
  template:
    pattern: new EqualOverrideSet([...~this~].filter(x => !~0~.has(x)))
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.minus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.Any]
  template:
    pattern: new EqualOverrideSet([...~this~].filter(x => x !== ~0~))
    imports:
      EqualOverrideSet: khrysalis/dist/KotlinCollections

- id: kotlin.collections.plus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.collections.Set]
  typeArgumentRequirements:
    0: primitive
  template: new Set([...~this~, ...~0~])

- id: kotlin.collections.plus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.Any]
  typeArgumentRequirements:
    0: primitive
  template: new Set([...~this~, ~0~])

- id: kotlin.collections.minus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.collections.Set]
  typeArgumentRequirements:
    0: primitive
  template: new Set([...~this~].filter(x => !~0~.has(x)))

- id: kotlin.collections.minus
  receiver: kotlin.collections.Set
  type: call
  arguments: [kotlin.Any]
  typeArgumentRequirements:
    0: primitive
  template: new Set([...~this~].filter(x => x !== ~0~))

- id: kotlin.collections.Collection.isEmpty
  type: call
  actualReceiver: kotlin.collections.Set
  template: ~this~.size === 0
- id: kotlin.collections.Collection.isNotEmpty
  type: call
  actualReceiver: kotlin.collections.Set
  template: ~this~.size !== 0