// Generated by Khrysalis TypeScript converter
// File: location/ViewDependency.location.actual.kt
// Package: com.lightningkite.khrysalis.location
import { GeoCoordinate } from './GeoCoordinate.shared'
import { Range, tryCastClass } from '../Kotlin'
import { ViewDependency } from '../views/ViewDependency.actual'
import { LocationResult } from './LocationResult.shared'

//! Declares com.lightningkite.khrysalis.location.requestLocation
export function comLightningkiteKhrysalisAndroidActivityAccessRequestLocation(
    this_RequestLocation: ViewDependency,
    accuracyBetterThanMeters: number = 10.0,
    timeoutInSeconds: number = 100.0,
    onResult: (a: (LocationResult | null), b: (string | null)) => void
){
    navigator.geolocation.getCurrentPosition(
        (position) => onResult(new LocationResult(
            new GeoCoordinate(position.coords.latitude, position.coords.longitude),
            position.coords.accuracy,
            position.coords.altitude,
            position.coords.altitudeAccuracy,
            position.coords.heading,
            position.coords.speed
        ), null),
        (err) => onResult(null, err.message),
        {
            maximumAge: timeoutInSeconds,
            timeout: timeoutInSeconds,
            enableHighAccuracy: accuracyBetterThanMeters <= 100
        }
    )
}

//! Declares com.lightningkite.khrysalis.location.requestLocationCached
export function comLightningkiteKhrysalisAndroidActivityAccessRequestLocationCached(
    this_RequestLocationCached: ViewDependency,
    accuracyBetterThanMeters: number = 10.0,
    timeoutInSeconds: number = 100.0,
    onResult: (a: (LocationResult | null), b: (string | null)) => void
){
    navigator.geolocation.getCurrentPosition(
        (position) => onResult(new LocationResult(
            new GeoCoordinate(position.coords.latitude, position.coords.longitude),
            position.coords.accuracy,
            position.coords.altitude,
            position.coords.altitudeAccuracy,
            position.coords.heading,
            position.coords.speed
        ), null),
        (err) => onResult(null, err.message),
        {
            maximumAge: 60 * 60 * 1000,
            timeout: timeoutInSeconds,
            enableHighAccuracy: accuracyBetterThanMeters <= 100
        }
    )
}

