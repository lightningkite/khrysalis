// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: Failable.shared.kt
// Package: com.lightningkite.khrysalis
// FQImport: com.lightningkite.khrysalis.Failable SKIPPED due to same file
// FQImport: com.lightningkite.khrysalis.Failable.Companion.failure.message TS message
// FQImport: com.lightningkite.khrysalis.Failable.Companion.success.T TS T
// FQImport: com.lightningkite.khrysalis.Failable.Companion.failure.T TS T
// FQImport: com.lightningkite.khrysalis.Failable.T TS T
// FQImport: com.lightningkite.khrysalis.Failable TS Failable
// FQImport: com.lightningkite.khrysalis.Failable.Companion.success.value TS value

//! Declares com.lightningkite.khrysalis.Failable
export class Failable<T> {
    public readonly result: (T | null);
    public readonly issue: (string | null);
    public constructor(result: (T | null) = null, issue: (string | null) = null) {
        this.result = result;
        this.issue = issue;
    }
    
    public static Companion = class Companion {
        private constructor() {
        }
        public static INSTANCE = new Companion();
        
        public failure<T>(message: string): Failable<T> { return new Failable<T>(undefined, message); }
        public success<T>(value: T): Failable<T> { return new Failable<T>(value, undefined); }
    }
}

