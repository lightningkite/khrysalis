// Generated by Khrysalis TypeScript converter
// File: views/draw/Path.actual.kt
// Package: com.lightningkite.khrysalis.views.draw

import { RectF } from "../geometry/RectF.actual";



export function pathFromLTRB(left: number, top: number, right: number, bottom: number): Path2D {
    const p = new Path2D();
    p.rect(left, top, right - left, bottom - top);
    return p;
}

export function pathFromRectF(rect: RectF): Path2D {
    return pathFromLTRB(rect.left, rect.top, rect.right, rect.bottom);
}

export function pathOvalFromLTRB(left: number, top: number, right: number, bottom: number): Path2D {
    const p = new Path2D();
    p.ellipse(left, top, (right - left)/2, (bottom - top)/2, 0, 0, Math.PI * 2);
    return p;
}

export function pathOvalFromRectF(rect: RectF): Path2D {
    return pathOvalFromLTRB(rect.left, rect.top, rect.right, rect.bottom);
}

export function pathRoundedFromLTRB(left: number, top: number, right: number, bottom: number, rx: number, ry: number): Path2D {
    const p = new Path2D();
    p.rect(left, top, right - left, bottom - top); //TODO: Rounded rect
    return p
}

export function pathRoundedFromRectF(rect: RectF, rx: number, ry: number): Path2D {
    return pathRoundedFromLTRB(rect.left, rect.top, rect.right, rect.bottom, rx, ry);
}