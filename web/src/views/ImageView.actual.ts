// Generated by Khrysalis TypeScript converter
// File: views/ImageView.actual.kt
// Package: com.lightningkite.khrysalis.views
import { Image, ImageImageBitmap, ImageRaw, ImageReference, ImageRemoteUrl } from '../Image.shared'
import {post} from "../delay.actual";


//! Declares com.lightningkite.khrysalis.observables.binding.loadImage>android.widget.ImageView
//! Declares com.lightningkite.khrysalis.views.loadImage>android.widget.ImageView
let canvasElement = document.createElement("canvas");
export function androidWidgetImageViewLoadImage(this_: HTMLImageElement, image: (Image | null)){
    post(()=>{
        if (image instanceof ImageRaw) {
            const url = URL.createObjectURL(new Blob([image.raw]));
            this_.src = url;
        } else if (image instanceof ImageReference) {
            const reader = new FileReader();
            reader.onload = (e) => {
                this_.src = e.target.result as string;
            }
            reader.readAsDataURL(image.uri)
        } else if (image instanceof ImageImageBitmap) {
            canvasElement.width = image.bitmap.width;
            canvasElement.height = image.bitmap.height;
            const ctx = canvasElement.getContext("2d");
            ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);
            ctx.drawImage(image.bitmap, 0, 0);
            canvasElement.toBlob((blob)=>{
                const url = URL.createObjectURL(blob);
                this_.src = url;
            })
        } else if (image instanceof ImageRemoteUrl){
            this_.src = image.url;
        }
    })
}