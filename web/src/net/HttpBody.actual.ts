// Generated by Khrysalis TypeScript converter
// File: net/HttpBody.actual.kt
// Package: com.lightningkite.khrysalis.net
import {Codable, kotlinAnyToJsonString} from '../Codable.actual'
import {HttpMediaType, HttpMediaTypes} from './HttpMediaType.actual'
import {stringify} from "./jsonParsing";

//! Declares com.lightningkite.khrysalis.net.HttpBody
export class HttpBody {
    data: BodyInit;
    type: HttpMediaType;
    constructor(data: BodyInit, type: HttpMediaType) {
        this.data = data;
        this.type = type;
    }
}

//! Declares com.lightningkite.khrysalis.net.HttpBodyPart
export class HttpBodyPart {
    name: string;
    value: string | null;
    filename: string | null;
    body: Blob;
}


//! Declares com.lightningkite.khrysalis.net.toJsonHttpBody
export function kotlinAnyToJsonHttpBody(this_: Codable): HttpBody {
    return new HttpBody(stringify(this_), HttpMediaTypes.INSTANCE.JSON);
}

//! Declares com.lightningkite.khrysalis.net.toHttpBody
export function kotlinByteArrayToHttpBody(this_: ArrayBuffer, mediaType: HttpMediaType): HttpBody {
    return new HttpBody(this_, mediaType);
}

//! Declares com.lightningkite.khrysalis.net.toHttpBody
export function kotlinStringToHttpBody(this_: string, mediaType: HttpMediaType = HttpMediaTypes.INSTANCE.TEXT): HttpBody {
    return new HttpBody(this_, mediaType);
}

//! Declares com.lightningkite.khrysalis.net.toHttpBody
//TODO: Figure out when we have bitmaps
// export function androidGraphicsBitmapToHttpBody(this_: Bitmap, maxBytes: number = 10_000_000): HttpBody{
//
// }

//! Declares com.lightningkite.khrysalis.net.multipartFormBody
export function multipartFormBody(...parts: HttpBodyPart[]): HttpBody {
    const data = new FormData();
    for(const part of parts){
        if(part.body != null){
            data.append(part.name, part.body, part.filename ?? "file");
        } else {
            data.append(part.name, part.value as string);
        }
    }
    return new HttpBody(
        data,
        HttpMediaTypes.INSTANCE.MULTIPART_FORM_DATA
    );
}
//! Declares com.lightningkite.khrysalis.net.multipartFormFilePart
export function multipartFormFilePart(name: string, valueOrFilename?: string, body?: Blob): HttpBodyPart {
    const result = new HttpBodyPart();
    result.name = name;
    if(body){
        result.filename = valueOrFilename ?? null;
        result.body = body;
    } else {
        result.value = valueOrFilename ?? null;
    }
    return result;
}

