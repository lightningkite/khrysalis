// Generated by Khrysalis TypeScript converter 
// File: observables/binding/RecyclerView.binding.actual.kt
// Package: com.lightningkite.khrysalis.observables.binding
import { comLightningkiteKhrysalisObservablesObservablePropertySubscribeBy } from '../ObservableProperty.ext.shared'
import { newEmptyView } from '../../views/EmptyView.actual'
import { getAndroidViewViewRemoved, ioReactivexDisposablesDisposableUntil } from '../../rx/DisposeCondition.actual'
import { ObservableProperty } from '../ObservableProperty.shared'
import { StandardObservableProperty } from '../StandardObservableProperty.shared'
import { comLightningkiteKhrysalisObservablesObservablePropertyMap } from '../TransformedObservableProperty.shared'
import { MutableObservableProperty } from '../MutableObservableProperty.shared'
import { also, tryCastClass } from 'Kotlin'

//! Declares com.lightningkite.khrysalis.observables.binding.whenScrolledToEnd>androidx.recyclerview.widget.RecyclerView
export function androidxRecyclerviewWidgetRecyclerViewWhenScrolledToEnd(this_: HTMLDivElement, action: () => void): void {
}

//! Declares com.lightningkite.khrysalis.observables.binding.reverseDirection>androidx.recyclerview.widget.RecyclerView
export function getAndroidxRecyclerviewWidgetRecyclerViewReverseDirection(this_: HTMLDivElement): boolean {
    return false
}
export function setAndroidxRecyclerviewWidgetRecyclerViewReverseDirection(this_: HTMLDivElement, value: boolean) {
}



//! Declares com.lightningkite.khrysalis.observables.binding.bind>androidx.recyclerview.widget.RecyclerView
export function androidxRecyclerviewWidgetRecyclerViewBind<T>(this_: HTMLDivElement, data: ObservableProperty<Array<T>>, defaultValue: T, makeView: (a: ObservableProperty<T>) => HTMLElement): void {

}

//! Declares com.lightningkite.khrysalis.observables.binding.RVTypeHandler
export class RVTypeHandler {
    public readonly viewDependency: Window;

    public handle<T extends any>(T: any, defaultValue: T, action:  (a: ObservableProperty<T>) => HTMLElement): void {
    }
}

//! Declares com.lightningkite.khrysalis.observables.binding.bindMulti>androidx.recyclerview.widget.RecyclerView
export function recyclerViewBindMultiType(this_: HTMLDivElement, viewDependency: Window, data: ObservableProperty<Array<any>>, typeHandlerSetup: (a: RVTypeHandler) => void): void {

}


//! Declares com.lightningkite.khrysalis.observables.binding.bindMulti>androidx.recyclerview.widget.RecyclerView
export function androidxRecyclerviewWidgetRecyclerViewBindMulti<T>(this_: HTMLDivElement, data: ObservableProperty<Array<T>>, defaultValue: T, determineType: (a: T) => number, makeView: (a: number, b: ObservableProperty<T>) => HTMLElement): void {
}


//! Declares com.lightningkite.khrysalis.observables.binding.bindRefresh>androidx.recyclerview.widget.RecyclerView
export function androidxRecyclerviewWidgetRecyclerViewBindRefresh(this_: HTMLDivElement, loading: ObservableProperty<boolean>, refresh: () => void): void {
}


