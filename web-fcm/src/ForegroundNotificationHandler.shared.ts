// Generated by Khrysalis TypeScript converter - this file will be overwritten.
// File: ForegroundNotificationHandler.shared.kt
// Package: com.lightningkite.khrysalis.fcm

//! Declares com.lightningkite.khrysalis.fcm.ForegroundNotificationHandler
export interface ForegroundNotificationHandler {
    
    handleNotificationInForeground(map: Map<string, string>): ForegroundNotificationHandlerResult 
}
export namespace ForegroundNotificationHandlerDefaults {
    export function handleNotificationInForeground(this_: ForegroundNotificationHandler, map: Map<string, string>): ForegroundNotificationHandlerResult {
        console.log(`Received notification in foreground with ${map}`);
        return ForegroundNotificationHandlerResult.SHOW_NOTIFICATION;
    }
}

//! Declares com.lightningkite.khrysalis.fcm.ForegroundNotificationHandlerResult
export class ForegroundNotificationHandlerResult {
    private constructor(name: string, jsonName: string) {
        this.name = name;
        this.jsonName = jsonName;
    }
    
    public static SUPPRESS_NOTIFICATION = new ForegroundNotificationHandlerResult("SUPPRESS_NOTIFICATION", "SUPPRESS_NOTIFICATION");
    public static SHOW_NOTIFICATION = new ForegroundNotificationHandlerResult("SHOW_NOTIFICATION", "SHOW_NOTIFICATION");
    public static UNHANDLED = new ForegroundNotificationHandlerResult("UNHANDLED", "UNHANDLED");
    
    private static _values: Array<ForegroundNotificationHandlerResult> = [ForegroundNotificationHandlerResult.SUPPRESS_NOTIFICATION, ForegroundNotificationHandlerResult.SHOW_NOTIFICATION, ForegroundNotificationHandlerResult.UNHANDLED];
    public static values(): Array<ForegroundNotificationHandlerResult> { return ForegroundNotificationHandlerResult._values; }
    public readonly name: string;
    public readonly jsonName: string;
    public static valueOf(name: string): ForegroundNotificationHandlerResult { return (ForegroundNotificationHandlerResult as any)[name]; }
    public toString(): string { return this.name }
    public toJSON(): string { return this.jsonName }
}

